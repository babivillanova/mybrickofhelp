{"version":3,"sources":["../../src/TransportWebUSB.ts","../node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","../../src/helpers.ts","../../src/index.ts","../node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","../../src/Transport.ts","../../src/hid-framing.ts","../node_modules/@ledgerhq/devices/node_modules/semver/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","../node_modules/lru-cache/index.js","../node_modules/yallist/yallist.js","../node_modules/yallist/iterator.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","../../src/webusb.ts"],"names":["device","interfaceNumber","_super","_this","Math","floor","random","e","_disconnectEmitted","emit","deviceModel","identifyUSBProductId","productId","__extends","TransportWebUSB","requestLedgerDevice","_a","open","getLedgerDevices","devices","length","configuration","selectConfiguration","gracefullyResetDevice","iface","configurations","interfaces","find","some","a","interfaceClass","TransportInterfaceNotAvailable","claimInterface","close","e_1","message","transport","onDisconnect","navigator","usb","removeEventListener","_emitDisconnect","DisconnectedDevice","addEventListener","exchangeBusyPromise","releaseInterface","apdu","exchangeAtomicImpl","channel","packetSize","log","toString","framing","hidFraming","blocks","makeBlocks","i","transferOut","_b","result","getReducedResult","acc","transferIn","r","buffer","Buffer","from","data","reduceResponse","includes","DisconnectedDeviceDuringOperation","isSupported","observer","unsubscribed","getFirstLedgerDevice","then","next","type","descriptor","complete","error","window","DOMException","code","TransportWebUSBGestureRequired","TransportOpenUserCancelled","unsubscribe","Transport","reset","console","warn","err_1","debug","require","MAX_LENGTH","MAX_SAFE_INTEGER","re","t","parseOptions","compareIdentifiers","SemVer","constructor","version","options","loose","includePrerelease","TypeError","this","m","trim","match","LOOSE","FULL","raw","major","minor","patch","prerelease","split","map","id","test","num","build","format","join","compare","other","compareMain","comparePre","b","undefined","compareBuild","inc","release","identifier","push","isNaN","Error","module","exports","Range","range","Comparator","value","set","parseRange","filter","c","first","isNullSet","isAny","comps","memoOpts","Object","keys","memoKey","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","replace","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","rangeList","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","comp","parseComparator","replaceGTE0","COMPARATORLOOSE","rangeMap","Map","comparators","size","has","delete","values","intersects","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","er","testSet","max","remainingComparators","slice","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","semver","ANY","allowed","errorClasses","deserializers","addCustomErrorDeserializer","name","deserializer","createCustomErrorClass","C","fields","assign","stack","prototype","deserializeError","object","msg","JSON","parse","des","name_1","create","prop","hasOwnProperty","captureStackTrace","String","serializeError","destroyCircular","seen","_c","key","indexOf","AccountNameRequiredError","AccountNotSupported","AmountRequired","BluetoothRequired","BtcUnmatchedApp","CantOpenDevice","CashAddrNotSupported","CurrencyNotSupported","DeviceAppVerifyNotSupported","DeviceGenuineSocketEarlyClose","DeviceNotGenuineError","DeviceOnDashboardExpected","DeviceOnDashboardUnexpected","DeviceInOSUExpected","DeviceHalted","DeviceNameInvalid","DeviceSocketFail","DeviceSocketNoBulkStatus","EnpointConfigError","EthAppPleaseEnableContractData","FeeEstimationFailed","FirmwareNotRecognized","HardResetFail","InvalidXRPTag","InvalidAddress","InvalidAddressBecauseDestinationIsAlsoSource","LatestMCUInstalledError","UnknownMCU","LedgerAPIError","LedgerAPIErrorWithMessage","LedgerAPINotAvailable","ManagerAppAlreadyInstalledError","ManagerAppRelyOnBTCError","ManagerAppDepInstallRequired","ManagerAppDepUninstallRequired","ManagerDeviceLockedError","ManagerFirmwareNotEnoughSpaceError","ManagerNotEnoughSpaceError","ManagerUninstallBTCDep","NetworkDown","NoAddressesFound","NotEnoughBalance","NotEnoughBalanceToDelegate","NotEnoughBalanceInParentAccount","NotEnoughSpendableBalance","NotEnoughBalanceBecauseDestinationNotCreated","NoAccessToCamera","NotEnoughGas","NotSupportedLegacyAddress","GasLessThanEstimate","PasswordsDontMatchError","PasswordIncorrectError","RecommendSubAccountsToEmpty","RecommendUndelegation","TimeoutTagged","UnexpectedBootloader","MCUNotGenuineToDashboard","RecipientRequired","UnavailableTezosOriginatedAccountReceive","UnavailableTezosOriginatedAccountSend","UpdateFetchFileFail","UpdateIncorrectHash","UpdateIncorrectSig","UpdateYourApp","UserRefusedDeviceNameChange","UserRefusedAddress","UserRefusedFirmwareUpdate","UserRefusedAllowManager","UserRefusedOnDevice","TransportRaceCondition","DeviceShouldStayInApp","WebsocketConnectionError","WebsocketConnectionFailed","WrongDeviceForAccount","WrongAppForCurrency","ETHAddressNonEIP","CantScanQRCode","FeeNotLoaded","FeeRequired","FeeTooHigh","SyncError","PairingFailed","GenuineCheckFailed","LedgerAPI4xx","LedgerAPI5xx","FirmwareOrAppUpdateRequired","NoDBPathGiven","DBWrongPassword","DBNotReset","TransportError","StatusCodes","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","OK","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","getAltStatusMessage","TransportStatusError","statusCode","statusText","k","smsg","statusCodeStr","MAX_SAFE_COMPONENT_LENGTH","src","R","createToken","isGlobal","index","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCE","LONETILDE","LONECARET","Number","SEMVER_SPEC_VERSION","process","NODE_DEBUG","args","opts","reduce","o","Symbol","operator","COMPARATOR","cmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","subscribers","obj","date","Date","dispatch","__ledgerLogsListen","cb","numeric","anum","bnum","rcompareIdentifiers","versionA","versionB","satisfies","gt","lt","lte","gte","hilo","gtfn","ltefn","ltfn","ecomp","high","low","forEach","comparator","DeviceModelId","blue","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","coerce","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","ledgerUSBVendorId","usbProductId","legacy","d","mm","bluetoothServices","serviceUuidToInfos","spec","__assign","eq","neq","op","EventEmitter","cla","ins","p1","p2","statusList","alloc","exchange","concat","response","sw","readUInt16BE","s","f","busyPromise","Promise","resolveBusy","unresponsiveReached","timeout","setTimeout","unresponsiveTimeout","res","clearTimeout","_apdu","_key","resolve","eventName","_events","on","removeListener","event","apply","__spreadArray","__read","exchangeTimeout","openTimeout","listenTimeout","reject","found","sub","listen","listenTimeoutId","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","self","methods","scrambleKey","methods_1_1","methodName","decorateAppAPIMethod","ctx","_appAPIlock","setScrambleKey","asUInt16BE","writeUInt16BE","initialAcc","dataLength","sequence","blockSize","nbBlocks","ceil","fill","head","writeUInt8","chunk","errors_1","readUInt8","chunkData","internalRe","tokens","valid","clean","diff","rcompare","compareLoose","sort","rsort","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","v","version1","version2","v1","v2","hasPre","prefix","defaultResult","parsed","list","rtl","COERCERTL","exec","lastIndex","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","doUse","node","hit","isStale","del","now","unshiftNode","maxAge","walker","tail","prev","removeNode","Entry","forEachStep","fn","thisp","call","Infinity","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","mL","allowStale","mA","lengthCalculator","lC","itemCount","rforEach","toArray","dump","h","dumpLru","len","item","unshift","peek","load","arr","l","expiresAt","prune","arguments","insert","inserted","Node","pushNode","shift","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","Array","toArrayReverse","sliceReverse","splice","start","deleteCount","reverse","iterator","versions","maxSV","rangeObj","min","minSV","minver","setMin","compver","r1","r2","ranges","simplified","original","simpleSubset","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","ledgerDevices","vendorId","requestDevice","filters","getDevices","existingDevices"],"mappings":"++DAkCA,cAOE,WAAYA,EAAmBC,GAA/B,MACEC,cAAO,K,OALTC,UAAUC,KAAKC,MAAsB,MAAhBD,KAAKE,UAC1BH,aAAa,GA+HbA,sBAAqB,EACrBA,kBAAkB,SAACI,GACbJ,EAAKK,qBACTL,EAAKK,oBAAqB,EAC1BL,EAAKM,KAAK,aAAcF,KA9HxBJ,EAAKH,OAASA,EACdG,EAAKF,gBAAkBA,EACvBE,EAAKO,YAAcC,YAAqBX,EAAOY,W,EAsLnD,OAjM6CC,OAuE9BC,UAAb,W,gGACiB,SAAMC,e,OACrB,OADMf,EAASgB,SACf,GAAOF,EAAgBG,KAAKjB,YAMjBc,gBAAb,W,gGACkB,SAAMI,e,OACtB,OAAuB,KADjBC,EAAUH,UACJI,OAAc,GAAO,MACjC,GAAON,EAAgBG,KAAKE,EAAQ,aAMzBL,OAAb,SAAkBd,G,wGAChB,SAAMA,EAAOiB,Q,cAAbD,SAE6B,OAAzBhB,EAAOqB,cAAP,MACF,GAAMrB,EAAOsB,oBAtGQ,I,OAsGrBN,S,iBAGF,SAAMO,EAAsBvB,I,OAK5B,GALAgB,SACMQ,EAAQxB,EAAOyB,eAAe,GAAGC,WAAWC,MAAK,SAACX,GACtD,OADkE,aACvDY,MAAK,SAACC,GAAM,OAAqB,MAArB,EAAEC,sBAGtBN,EACH,MAAM,IAAIO,iCACR,qGAIE9B,EAAkBuB,EAAMvB,gB,iBAG5B,O,sBAAA,GAAMD,EAAOgC,eAAe/B,I,cAA5Be,S,aAEA,O,WAAA,GAAMhB,EAAOiC,S,OACb,MADAjB,SACM,IAAIe,iCAA+BG,EAAEC,S,OAgB7C,OAbMC,EAAY,IAAItB,EAAgBd,EAAQC,GAExCoC,EAAe,SAAC9B,GAChBP,IAAWO,EAAEP,SAEfsC,UAAUC,IAAIC,oBAAoB,aAAcH,GAEhDD,EAAUK,gBAAgB,IAAIC,wBAKlCJ,UAAUC,IAAII,iBAAiB,aAAcN,GAC7C,GAAOD,WAaHtB,kBAAN,W,0FACE,SAAM,KAAK8B,qB,OACX,OADA5B,SACA,GAAM,KAAKhB,OAAO6C,iBAAiB,KAAK5C,kB,OACxC,OADAe,SACA,GAAMO,EAAsB,KAAKvB,S,OACjC,OADAgB,SACA,GAAM,KAAKhB,OAAOiC,S,cAAlBjB,S,YAQIF,qBAAN,SAAegC,G,qGACH,SAAM,KAAKC,oBAAmB,gD,0EAC9BC,GAAFhC,EAA0B,MAAjB,QAAEiC,EAAU,aAC3BC,YAAI,OAAQ,MAAQJ,EAAKK,SAAS,QAC5BC,EAAUC,IAAWL,EAASC,GAE9BK,EAASF,EAAQG,WAAWT,GAEzBU,EAAI,E,wBAAGA,EAAIF,EAAOlC,OACzB,GAAM,KAAKpB,OAAOyD,YA3KH,EA2K+BH,EAAOE,KADtB,M,OAC/BE,S,wBADiCF,I,oBAQ1BG,EAASP,EAAQQ,iBAAiBC,IAAK,MACpC,GAAM,KAAK7D,OAAO8D,WAnLb,EAmLwCb,I,cAAjDc,EAAIL,SAGJM,EAASC,EAAOC,KAAKH,EAAEI,KAAKH,QAClCH,EAAMT,EAAQgB,eAAeP,EAAKG,G,aAIpC,OADAd,YAAI,OAAQ,MAAQS,EAAOR,SAAS,QACpC,GAAOQ,aAxBO,OAyBP,SAACpD,GACR,GAAIA,GAAKA,EAAE4B,SAAW5B,EAAE4B,QAAQkC,SAAS,gBAGvC,MAFAlE,EAAKsC,gBAAgBlC,GAEf,IAAI+D,oCAAkC/D,EAAE4B,SAGhD,MAAM5B,M,OAGR,SAnCUS,kBAsCZF,wCA/KOA,cAAcyD,IAKdzD,OAAOI,IAQPJ,SAAS,SACd0D,GAEA,IAAIC,GAAe,EA8BnB,OA7BAC,cAAuBC,MACrB,SAAC3E,GACC,IAAKyE,EAAc,CACjB,IAAM/D,EAAcC,YAAqBX,EAAOY,WAChD4D,EAASI,KAAK,CACZC,KAAM,MACNC,WAAY9E,EACZU,YAAW,IAEb8D,EAASO,eAGb,SAACC,GAEGC,OAAOC,cACPF,aAAiBC,OAAOC,cACT,KAAfF,EAAMG,KAENX,EAASQ,MAAM,IAAII,iCAA+BJ,EAAM7C,UAExDqC,EAASQ,MAAM,IAAIK,6BAA2BL,EAAM7C,aASnD,CACLmD,YALF,WACEb,GAAe,KAqIrB,EAjMA,CAA6Cc,KAmM7C,SAAehE,EAAsBvB,G,gGAEjC,O,sBAAA,GAAMA,EAAOwF,S,cAAbxE,S,+BAEAyE,QAAQC,KAAKC,G,8BAvMI7E,a,6CClCrB,MAAM8E,EAAQC,EAAQ,MAChB,WAAEC,EAAF,iBAAcC,GAAqBF,EAAQ,MAC3C,GAAEG,EAAF,EAAMC,GAAMJ,EAAQ,KAEpBK,EAAeL,EAAQ,MACvB,mBAAEM,GAAuBN,EAAQ,KACvC,MAAMO,EACJC,YAAaC,EAASC,GAGpB,GAFAA,EAAUL,EAAaK,GAEnBD,aAAmBF,EAAQ,CAC7B,GAAIE,EAAQE,UAAYD,EAAQC,OAC5BF,EAAQG,sBAAwBF,EAAQE,kBAC1C,OAAOH,EAEPA,EAAUA,EAAQA,aAEf,GAAuB,kBAAZA,EAChB,MAAM,IAAII,UAAJ,2BAAkCJ,IAG1C,GAAIA,EAAQlF,OAAS0E,EACnB,MAAM,IAAIY,UAAJ,iCACsBZ,EADtB,gBAKRF,EAAM,SAAUU,EAASC,GACzBI,KAAKJ,QAAUA,EACfI,KAAKH,QAAUD,EAAQC,MAGvBG,KAAKF,oBAAsBF,EAAQE,kBAEnC,MAAMG,EAAIN,EAAQO,OAAOC,MAAMP,EAAQC,MAAQR,EAAGC,EAAEc,OAASf,EAAGC,EAAEe,OAElE,IAAKJ,EACH,MAAM,IAAIF,UAAJ,2BAAkCJ,IAU1C,GAPAK,KAAKM,IAAMX,EAGXK,KAAKO,OAASN,EAAE,GAChBD,KAAKQ,OAASP,EAAE,GAChBD,KAAKS,OAASR,EAAE,GAEZD,KAAKO,MAAQnB,GAAoBY,KAAKO,MAAQ,EAChD,MAAM,IAAIR,UAAU,yBAGtB,GAAIC,KAAKQ,MAAQpB,GAAoBY,KAAKQ,MAAQ,EAChD,MAAM,IAAIT,UAAU,yBAGtB,GAAIC,KAAKS,MAAQrB,GAAoBY,KAAKS,MAAQ,EAChD,MAAM,IAAIV,UAAU,yBAIjBE,EAAE,GAGLD,KAAKU,WAAaT,EAAE,GAAGU,MAAM,KAAKC,KAAKC,IACrC,GAAI,WAAWC,KAAKD,GAAK,CACvB,MAAME,GAAOF,EACb,GAAIE,GAAO,GAAKA,EAAM3B,EACpB,OAAO2B,EAGX,OAAOF,KATTb,KAAKU,WAAa,GAapBV,KAAKgB,MAAQf,EAAE,GAAKA,EAAE,GAAGU,MAAM,KAAO,GACtCX,KAAKiB,SAGPA,SAKE,OAJAjB,KAAKL,QAAL,UAAkBK,KAAKO,MAAvB,YAAgCP,KAAKQ,MAArC,YAA8CR,KAAKS,OAC/CT,KAAKU,WAAWjG,SAClBuF,KAAKL,SAAL,WAAoBK,KAAKU,WAAWQ,KAAK,OAEpClB,KAAKL,QAGdnD,WACE,OAAOwD,KAAKL,QAGdwB,QAASC,GAEP,GADAnC,EAAM,iBAAkBe,KAAKL,QAASK,KAAKJ,QAASwB,KAC9CA,aAAiB3B,GAAS,CAC9B,GAAqB,kBAAV2B,GAAsBA,IAAUpB,KAAKL,QAC9C,OAAO,EAETyB,EAAQ,IAAI3B,EAAO2B,EAAOpB,KAAKJ,SAGjC,OAAIwB,EAAMzB,UAAYK,KAAKL,QAClB,EAGFK,KAAKqB,YAAYD,IAAUpB,KAAKsB,WAAWF,GAGpDC,YAAaD,GAKX,OAJMA,aAAiB3B,IACrB2B,EAAQ,IAAI3B,EAAO2B,EAAOpB,KAAKJ,UAI/BJ,EAAmBQ,KAAKO,MAAOa,EAAMb,QACrCf,EAAmBQ,KAAKQ,MAAOY,EAAMZ,QACrChB,EAAmBQ,KAAKS,MAAOW,EAAMX,OAIzCa,WAAYF,GAMV,GALMA,aAAiB3B,IACrB2B,EAAQ,IAAI3B,EAAO2B,EAAOpB,KAAKJ,UAI7BI,KAAKU,WAAWjG,SAAW2G,EAAMV,WAAWjG,OAC9C,OAAQ,EACH,IAAKuF,KAAKU,WAAWjG,QAAU2G,EAAMV,WAAWjG,OACrD,OAAO,EACF,IAAKuF,KAAKU,WAAWjG,SAAW2G,EAAMV,WAAWjG,OACtD,OAAO,EAGT,IAAIoC,EAAI,EACR,EAAG,CACD,MAAM3B,EAAI8E,KAAKU,WAAW7D,GACpB0E,EAAIH,EAAMV,WAAW7D,GAE3B,GADAoC,EAAM,qBAAsBpC,EAAG3B,EAAGqG,QACxBC,IAANtG,QAAyBsG,IAAND,EACrB,OAAO,EACF,QAAUC,IAAND,EACT,OAAO,EACF,QAAUC,IAANtG,EACT,OAAQ,EACH,GAAIA,IAAMqG,EAGf,OAAO/B,EAAmBtE,EAAGqG,WAEtB1E,GAGb4E,aAAcL,GACNA,aAAiB3B,IACrB2B,EAAQ,IAAI3B,EAAO2B,EAAOpB,KAAKJ,UAGjC,IAAI/C,EAAI,EACR,EAAG,CACD,MAAM3B,EAAI8E,KAAKgB,MAAMnE,GACf0E,EAAIH,EAAMJ,MAAMnE,GAEtB,GADAoC,EAAM,qBAAsBpC,EAAG3B,EAAGqG,QACxBC,IAANtG,QAAyBsG,IAAND,EACrB,OAAO,EACF,QAAUC,IAAND,EACT,OAAO,EACF,QAAUC,IAANtG,EACT,OAAQ,EACH,GAAIA,IAAMqG,EAGf,OAAO/B,EAAmBtE,EAAGqG,WAEtB1E,GAKb6E,IAAKC,EAASC,GACZ,OAAQD,GACN,IAAK,WACH3B,KAAKU,WAAWjG,OAAS,EACzBuF,KAAKS,MAAQ,EACbT,KAAKQ,MAAQ,EACbR,KAAKO,QACLP,KAAK0B,IAAI,MAAOE,GAChB,MACF,IAAK,WACH5B,KAAKU,WAAWjG,OAAS,EACzBuF,KAAKS,MAAQ,EACbT,KAAKQ,QACLR,KAAK0B,IAAI,MAAOE,GAChB,MACF,IAAK,WAIH5B,KAAKU,WAAWjG,OAAS,EACzBuF,KAAK0B,IAAI,QAASE,GAClB5B,KAAK0B,IAAI,MAAOE,GAChB,MAGF,IAAK,aAC4B,IAA3B5B,KAAKU,WAAWjG,QAClBuF,KAAK0B,IAAI,QAASE,GAEpB5B,KAAK0B,IAAI,MAAOE,GAChB,MAEF,IAAK,QAMc,IAAf5B,KAAKQ,OACU,IAAfR,KAAKS,OACsB,IAA3BT,KAAKU,WAAWjG,QAEhBuF,KAAKO,QAEPP,KAAKQ,MAAQ,EACbR,KAAKS,MAAQ,EACbT,KAAKU,WAAa,GAClB,MACF,IAAK,QAKgB,IAAfV,KAAKS,OAA0C,IAA3BT,KAAKU,WAAWjG,QACtCuF,KAAKQ,QAEPR,KAAKS,MAAQ,EACbT,KAAKU,WAAa,GAClB,MACF,IAAK,QAK4B,IAA3BV,KAAKU,WAAWjG,QAClBuF,KAAKS,QAEPT,KAAKU,WAAa,GAClB,MAGF,IAAK,MACH,GAA+B,IAA3BV,KAAKU,WAAWjG,OAClBuF,KAAKU,WAAa,CAAC,OACd,CACL,IAAI7D,EAAImD,KAAKU,WAAWjG,OACxB,OAASoC,GAAK,GACsB,kBAAvBmD,KAAKU,WAAW7D,KACzBmD,KAAKU,WAAW7D,KAChBA,GAAK,IAGE,IAAPA,GAEFmD,KAAKU,WAAWmB,KAAK,GAGrBD,IAGyD,IAAvDpC,EAAmBQ,KAAKU,WAAW,GAAIkB,GACrCE,MAAM9B,KAAKU,WAAW,MACxBV,KAAKU,WAAa,CAACkB,EAAY,IAGjC5B,KAAKU,WAAa,CAACkB,EAAY,IAGnC,MAEF,QACE,MAAM,IAAIG,MAAJ,sCAAyCJ,IAInD,OAFA3B,KAAKiB,SACLjB,KAAKM,IAAMN,KAAKL,QACTK,MAIXgC,EAAOC,QAAUxC,G,oBC9RjB,MAAMA,EAASP,EAAQ,KAIvB8C,EAAOC,QAHS,CAAC/G,EAAGqG,EAAG1B,IACrB,IAAIJ,EAAOvE,EAAG2E,GAAOsB,QAAQ,IAAI1B,EAAO8B,EAAG1B,K,oBCD7C,MAAMqC,EACJxC,YAAayC,EAAOvC,GAGlB,GAFAA,EAAUL,EAAaK,GAEnBuC,aAAiBD,EACnB,OACEC,EAAMtC,UAAYD,EAAQC,OAC1BsC,EAAMrC,sBAAwBF,EAAQE,kBAE/BqC,EAEA,IAAID,EAAMC,EAAM7B,IAAKV,GAIhC,GAAIuC,aAAiBC,EAKnB,OAHApC,KAAKM,IAAM6B,EAAME,MACjBrC,KAAKsC,IAAM,CAAC,CAACH,IACbnC,KAAKiB,SACEjB,KAkBT,GAfAA,KAAKJ,QAAUA,EACfI,KAAKH,QAAUD,EAAQC,MACvBG,KAAKF,oBAAsBF,EAAQE,kBAGnCE,KAAKM,IAAM6B,EACXnC,KAAKsC,IAAMH,EACRxB,MAAM,MAENC,KAAIxD,GAAK4C,KAAKuC,WAAWnF,EAAE8C,UAI3BsC,QAAOC,GAAKA,EAAEhI,UAEZuF,KAAKsC,IAAI7H,OACZ,MAAM,IAAIsF,UAAJ,gCAAuCoC,IAI/C,GAAInC,KAAKsC,IAAI7H,OAAS,EAAG,CAEvB,MAAMiI,EAAQ1C,KAAKsC,IAAI,GAEvB,GADAtC,KAAKsC,IAAMtC,KAAKsC,IAAIE,QAAOC,IAAME,EAAUF,EAAE,MACrB,IAApBzC,KAAKsC,IAAI7H,OACXuF,KAAKsC,IAAM,CAACI,QACP,GAAI1C,KAAKsC,IAAI7H,OAAS,EAE3B,IAAK,MAAMgI,KAAKzC,KAAKsC,IACnB,GAAiB,IAAbG,EAAEhI,QAAgBmI,EAAMH,EAAE,IAAK,CACjCzC,KAAKsC,IAAM,CAACG,GACZ,OAMRzC,KAAKiB,SAGPA,SAOE,OANAjB,KAAKmC,MAAQnC,KAAKsC,IACf1B,KAAKiC,GACGA,EAAM3B,KAAK,KAAKhB,SAExBgB,KAAK,MACLhB,OACIF,KAAKmC,MAGd3F,WACE,OAAOwD,KAAKmC,MAGdI,WAAYJ,GACVA,EAAQA,EAAMjC,OAId,MAAM4C,EAAWC,OAAOC,KAAKhD,KAAKJ,SAASsB,KAAK,KAC1C+B,EAAU,cAAH,OAAiBH,EAAjB,YAA6BX,GACpCe,EAASC,EAAMC,IAAIH,GACzB,GAAIC,EACF,OAAOA,EAGT,MAAMrD,EAAQG,KAAKJ,QAAQC,MAErBwD,EAAKxD,EAAQR,EAAGC,EAAEgE,kBAAoBjE,EAAGC,EAAEiE,aACjDpB,EAAQA,EAAMqB,QAAQH,EAAII,EAAczD,KAAKJ,QAAQE,oBACrDb,EAAM,iBAAkBkD,GAExBA,EAAQA,EAAMqB,QAAQnE,EAAGC,EAAEoE,gBAAiBC,GAC5C1E,EAAM,kBAAmBkD,GAczB,IAAIyB,GALJzB,GAHAA,GAHAA,EAAQA,EAAMqB,QAAQnE,EAAGC,EAAEuE,WAAYC,IAGzBN,QAAQnE,EAAGC,EAAEyE,WAAYC,IAGzBrD,MAAM,OAAOO,KAAK,MAM7BP,MAAM,KACNC,KAAIqD,GAAQC,EAAgBD,EAAMjE,KAAKJ,WACvCsB,KAAK,KACLP,MAAM,OAENC,KAAIqD,GAAQE,EAAYF,EAAMjE,KAAKJ,WAElCC,IAEF+D,EAAYA,EAAUpB,QAAOyB,IAC3BhF,EAAM,uBAAwBgF,EAAMjE,KAAKJ,WAChCqE,EAAK9D,MAAMd,EAAGC,EAAE8E,sBAG7BnF,EAAM,aAAc2E,GAKpB,MAAMS,EAAW,IAAIC,IACfC,EAAcX,EAAUhD,KAAIqD,GAAQ,IAAI7B,EAAW6B,EAAMjE,KAAKJ,WACpE,IAAK,MAAMqE,KAAQM,EAAa,CAC9B,GAAI5B,EAAUsB,GACZ,MAAO,CAACA,GAEVI,EAAS/B,IAAI2B,EAAK5B,MAAO4B,GAEvBI,EAASG,KAAO,GAAKH,EAASI,IAAI,KACpCJ,EAASK,OAAO,IAGlB,MAAM1H,EAAS,IAAIqH,EAASM,UAE5B,OADAxB,EAAMb,IAAIW,EAASjG,GACZA,EAGT4H,WAAYzC,EAAOvC,GACjB,KAAMuC,aAAiBD,GACrB,MAAM,IAAInC,UAAU,uBAGtB,OAAOC,KAAKsC,IAAIrH,MAAM4J,GAElBC,EAAcD,EAAiBjF,IAC/BuC,EAAMG,IAAIrH,MAAM8J,GAEZD,EAAcC,EAAkBnF,IAChCiF,EAAgBG,OAAOC,GACdF,EAAiBC,OAAOE,GACtBD,EAAeL,WAAWM,EAAiBtF,WAUhEkB,KAAMnB,GACJ,IAAKA,EACH,OAAO,EAGT,GAAuB,kBAAZA,EACT,IACEA,EAAU,IAAIF,EAAOE,EAASK,KAAKJ,SACnC,MAAOuF,GACP,OAAO,EAIX,IAAK,IAAItI,EAAI,EAAGA,EAAImD,KAAKsC,IAAI7H,OAAQoC,IACnC,GAAIuI,EAAQpF,KAAKsC,IAAIzF,GAAI8C,EAASK,KAAKJ,SACrC,OAAO,EAGX,OAAO,GAGXoC,EAAOC,QAAUC,EAEjB,MACMiB,EAAQ,IADFjE,EAAQ,KACN,CAAQ,CAAEmG,IAAK,MAEvB9F,EAAeL,EAAQ,KACvBkD,EAAalD,EAAQ,KACrBD,EAAQC,EAAQ,KAChBO,EAASP,EAAQ,MACjB,GACJG,EADI,EAEJC,EAFI,sBAGJqE,EAHI,iBAIJG,EAJI,iBAKJE,GACE9E,EAAQ,KAENyD,EAAYF,GAAiB,aAAZA,EAAEJ,MACnBO,EAAQH,GAAiB,KAAZA,EAAEJ,MAIfyC,EAAgB,CAACP,EAAa3E,KAClC,IAAI5C,GAAS,EACb,MAAMsI,EAAuBf,EAAYgB,QACzC,IAAIC,EAAiBF,EAAqBG,MAE1C,KAAOzI,GAAUsI,EAAqB7K,QACpCuC,EAASsI,EAAqBN,OAAOU,GAC5BF,EAAeZ,WAAWc,EAAiB9F,KAGpD4F,EAAiBF,EAAqBG,MAGxC,OAAOzI,GAMHkH,EAAkB,CAACD,EAAMrE,KAC7BX,EAAM,OAAQgF,EAAMrE,GACpBqE,EAAO0B,EAAc1B,EAAMrE,GAC3BX,EAAM,QAASgF,GACfA,EAAO2B,EAAc3B,EAAMrE,GAC3BX,EAAM,SAAUgF,GAChBA,EAAO4B,EAAe5B,EAAMrE,GAC5BX,EAAM,SAAUgF,GAChBA,EAAO6B,EAAa7B,EAAMrE,GAC1BX,EAAM,QAASgF,GACRA,GAGH8B,EAAMlF,IAAOA,GAA2B,MAArBA,EAAGmF,eAAgC,MAAPnF,EAQ/C+E,EAAgB,CAAC3B,EAAMrE,IAC3BqE,EAAK/D,OAAOS,MAAM,OAAOC,KAAK6B,GACrBwD,EAAaxD,EAAG7C,KACtBsB,KAAK,KAEJ+E,EAAe,CAAChC,EAAMrE,KAC1B,MAAMxC,EAAIwC,EAAQC,MAAQR,EAAGC,EAAE4G,YAAc7G,EAAGC,EAAE6G,OAClD,OAAOlC,EAAKT,QAAQpG,GAAG,CAACgJ,EAAGC,EAAGpG,EAAGqG,EAAGC,KAElC,IAAIC,EAoBJ,OArBAvH,EAAM,QAASgF,EAAMmC,EAAGC,EAAGpG,EAAGqG,EAAGC,GAG7BR,EAAIM,GACNG,EAAM,GACGT,EAAI9F,GACbuG,EAAM,KAAH,OAAQH,EAAR,kBAAmBA,EAAI,EAAvB,UACMN,EAAIO,GAEbE,EAAM,KAAH,OAAQH,EAAR,YAAapG,EAAb,eAAqBoG,EAArB,aAA2BpG,EAAI,EAA/B,QACMsG,GACTtH,EAAM,kBAAmBsH,GACzBC,EAAM,KAAH,OAAQH,EAAR,YAAapG,EAAb,YAAkBqG,EAAlB,YAAuBC,EAAvB,aACEF,EADF,aACQpG,EAAI,EADZ,SAIHuG,EAAM,KAAH,OAAQH,EAAR,YAAapG,EAAb,YAAkBqG,EAAlB,aACED,EADF,aACQpG,EAAI,EADZ,QAILhB,EAAM,eAAgBuH,GACfA,MAULb,EAAgB,CAAC1B,EAAMrE,IAC3BqE,EAAK/D,OAAOS,MAAM,OAAOC,KAAK6B,GACrBgE,EAAahE,EAAG7C,KACtBsB,KAAK,KAEJuF,EAAe,CAACxC,EAAMrE,KAC1BX,EAAM,QAASgF,EAAMrE,GACrB,MAAMxC,EAAIwC,EAAQC,MAAQR,EAAGC,EAAEoH,YAAcrH,EAAGC,EAAEqH,OAC5CC,EAAIhH,EAAQE,kBAAoB,KAAO,GAC7C,OAAOmE,EAAKT,QAAQpG,GAAG,CAACgJ,EAAGC,EAAGpG,EAAGqG,EAAGC,KAElC,IAAIC,EA2CJ,OA5CAvH,EAAM,QAASgF,EAAMmC,EAAGC,EAAGpG,EAAGqG,EAAGC,GAG7BR,EAAIM,GACNG,EAAM,GACGT,EAAI9F,GACbuG,EAAM,KAAH,OAAQH,EAAR,eAAgBO,EAAhB,cAAuBP,EAAI,EAA3B,UACMN,EAAIO,GAEXE,EADQ,MAANH,EACI,KAAH,OAAQA,EAAR,YAAapG,EAAb,aAAmB2G,EAAnB,aAAyBP,EAAzB,aAA+BpG,EAAI,EAAnC,QAEG,KAAH,OAAQoG,EAAR,YAAapG,EAAb,aAAmB2G,EAAnB,cAA0BP,EAAI,EAA9B,UAEIE,GACTtH,EAAM,kBAAmBsH,GAGrBC,EAFM,MAANH,EACQ,MAANpG,EACI,KAAH,OAAQoG,EAAR,YAAapG,EAAb,YAAkBqG,EAAlB,YAAuBC,EAAvB,aACEF,EADF,YACOpG,EADP,aACaqG,EAAI,EADjB,MAGG,KAAH,OAAQD,EAAR,YAAapG,EAAb,YAAkBqG,EAAlB,YAAuBC,EAAvB,aACEF,EADF,aACQpG,EAAI,EADZ,QAIC,KAAH,OAAQoG,EAAR,YAAapG,EAAb,YAAkBqG,EAAlB,YAAuBC,EAAvB,cACGF,EAAI,EADP,YAILpH,EAAM,SAGFuH,EAFM,MAANH,EACQ,MAANpG,EACI,KAAH,OAAQoG,EAAR,YAAapG,EAAb,YAAkBqG,GAAlB,OACAM,EADA,aACMP,EADN,YACWpG,EADX,aACiBqG,EAAI,EADrB,MAGG,KAAH,OAAQD,EAAR,YAAapG,EAAb,YAAkBqG,GAAlB,OACAM,EADA,aACMP,EADN,aACYpG,EAAI,EADhB,QAIC,KAAH,OAAQoG,EAAR,YAAapG,EAAb,YAAkBqG,EAAlB,cACGD,EAAI,EADP,WAKPpH,EAAM,eAAgBuH,GACfA,MAILX,EAAiB,CAAC5B,EAAMrE,KAC5BX,EAAM,iBAAkBgF,EAAMrE,GACvBqE,EAAKtD,MAAM,OAAOC,KAAK6B,GACrBoE,EAAcpE,EAAG7C,KACvBsB,KAAK,MAGJ2F,EAAgB,CAAC5C,EAAMrE,KAC3BqE,EAAOA,EAAK/D,OACZ,MAAM9C,EAAIwC,EAAQC,MAAQR,EAAGC,EAAEwH,aAAezH,EAAGC,EAAEyH,QACnD,OAAO9C,EAAKT,QAAQpG,GAAG,CAACoJ,EAAKQ,EAAMX,EAAGpG,EAAGqG,EAAGC,KAC1CtH,EAAM,SAAUgF,EAAMuC,EAAKQ,EAAMX,EAAGpG,EAAGqG,EAAGC,GAC1C,MAAMU,EAAKlB,EAAIM,GACTa,EAAKD,GAAMlB,EAAI9F,GACfkH,EAAKD,GAAMnB,EAAIO,GACfc,EAAOD,EA+Db,MA7Da,MAATH,GAAgBI,IAClBJ,EAAO,IAKTT,EAAK3G,EAAQE,kBAAoB,KAAO,GAEpCmH,EAGAT,EAFW,MAATQ,GAAyB,MAATA,EAEZ,WAGA,IAECA,GAAQI,GAGbF,IACFjH,EAAI,GAENqG,EAAI,EAES,MAATU,GAGFA,EAAO,KACHE,GACFb,GAAKA,EAAI,EACTpG,EAAI,EACJqG,EAAI,IAEJrG,GAAKA,EAAI,EACTqG,EAAI,IAEY,OAATU,IAGTA,EAAO,IACHE,EACFb,GAAKA,EAAI,EAETpG,GAAKA,EAAI,GAIA,MAAT+G,IACFT,EAAK,MAGPC,EAAM,GAAH,OAAMQ,EAAOX,EAAb,YAAkBpG,EAAlB,YAAuBqG,GAAvB,OAA2BC,IACrBW,EACTV,EAAM,KAAH,OAAQH,EAAR,eAAgBE,EAAhB,cAAwBF,EAAI,EAA5B,UACMc,IACTX,EAAM,KAAH,OAAQH,EAAR,YAAapG,EAAb,aAAmBsG,EAAnB,aACEF,EADF,aACQpG,EAAI,EADZ,SAILhB,EAAM,gBAAiBuH,GAEhBA,MAMLV,EAAe,CAAC7B,EAAMrE,KAC1BX,EAAM,eAAgBgF,EAAMrE,GAErBqE,EAAK/D,OAAOsD,QAAQnE,EAAGC,EAAE+H,MAAO,KAGnClD,EAAc,CAACF,EAAMrE,KACzBX,EAAM,cAAegF,EAAMrE,GACpBqE,EAAK/D,OACTsD,QAAQnE,EAAGO,EAAQE,kBAAoBR,EAAEgI,QAAUhI,EAAEiI,MAAO,KAQ3D9D,EAAgB+D,GAAS,CAACC,EAC9BlK,EAAMmK,EAAIC,EAAIC,EAAIC,EAAKC,EACvBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAKC,KAEnB7K,EADEwI,EAAI2B,GACC,GACE3B,EAAI4B,GACN,KAAH,OAAQD,EAAR,eAAiBF,EAAQ,KAAO,IAC3BzB,EAAI6B,GACN,KAAH,OAAQF,EAAR,YAAcC,EAAd,aAAqBH,EAAQ,KAAO,IAC/BK,EACF,KAAH,OAAQtK,GAEL,KAAH,OAAQA,GAAR,OAAeiK,EAAQ,KAAO,IAIlCO,EADEhC,EAAIiC,GACD,GACIjC,EAAIkC,GACR,IAAH,QAAQD,EAAK,EAAb,UACOjC,EAAImC,GACR,IAAH,OAAOF,EAAP,aAAcC,EAAK,EAAnB,QACOE,EACJ,KAAH,OAAQH,EAAR,YAAcC,EAAd,YAAoBC,EAApB,YAA0BC,GACnBX,EACJ,IAAH,OAAOQ,EAAP,YAAaC,EAAb,aAAoBC,EAAK,EAAzB,MAEG,KAAH,OAAQH,GAGL,UAAIxK,EAAJ,YAAYwK,GAAM7H,QAGrBkF,EAAU,CAAC9C,EAAK3C,EAASC,KAC7B,IAAK,IAAI/C,EAAI,EAAGA,EAAIyF,EAAI7H,OAAQoC,IAC9B,IAAKyF,EAAIzF,GAAGiE,KAAKnB,GACf,OAAO,EAIX,GAAIA,EAAQe,WAAWjG,SAAWmF,EAAQE,kBAAmB,CAM3D,IAAK,IAAIjD,EAAI,EAAGA,EAAIyF,EAAI7H,OAAQoC,IAE9B,GADAoC,EAAMqD,EAAIzF,GAAGwL,QACT/F,EAAIzF,GAAGwL,SAAWjG,EAAWkG,KAI7BhG,EAAIzF,GAAGwL,OAAO3H,WAAWjG,OAAS,EAAG,CACvC,MAAM8N,EAAUjG,EAAIzF,GAAGwL,OACvB,GAAIE,EAAQhI,QAAUZ,EAAQY,OAC1BgI,EAAQ/H,QAAUb,EAAQa,OAC1B+H,EAAQ9H,QAAUd,EAAQc,MAC5B,OAAO,EAMb,OAAO,EAGT,OAAO,I,wvLChgBH+H,EAAe,GACfC,EAAgB,GAETC,EAA6B,SACxCC,EACAC,GAEAH,EAAcE,GAAQC,GAQXC,EAAyB,SAACF,GACrC,IAAMG,EAAqB,SAAqBtN,EAASuN,GACvDhG,OAAOiG,OAAO,KAAMD,GACpB,KAAKJ,KAAOA,EACZ,KAAKnN,QAAUA,GAAWmN,EAC1B,KAAKM,OAAQ,IAAIlH,OAAQkH,OAI3B,OAFAH,EAAEI,UAAY,IAAInH,MAClByG,EAAaG,GAAQG,EACdA,GAIIK,EAAmB,SAACC,GAC/B,GAAsB,kBAAXA,GAAuBA,EAAQ,CACxC,IAEE,IAAMC,EAAMC,KAAKC,MAAMH,EAAO5N,SAC1B6N,EAAI7N,SAAW6N,EAAIV,OACrBS,EAASC,GAEX,MAAOzP,IAIT,IAAIyE,OAAK,EACT,GAA2B,kBAAhB+K,EAAOT,KAAmB,CAC3B,MAASS,EAAM,KACjBI,EAAMf,EAAcgB,GAC1B,GAAID,EACFnL,EAAQmL,EAAIJ,OACP,CACL,IAAI1J,EAAuB,UAAT+J,EAAmB1H,MAAQyG,EAAaiB,GAErD/J,IACHZ,QAAQC,KAAK,mCAAqC0K,EAAO,KACzD/J,EAAcmJ,EAAuBY,IAGvCpL,EAAQ0E,OAAO2G,OAAOhK,EAAYwJ,WAClC,IACE,IAAK,IAAMS,KAAQP,EACbA,EAAOQ,eAAeD,KACxBtL,EAAMsL,GAAQP,EAAOO,IAGzB,MAAO/P,WAKXyE,EAAQ,IAAI0D,MAAMqH,EAAO5N,SAM3B,OAHK6C,EAAM4K,OAASlH,MAAM8H,mBACxB9H,MAAM8H,kBAAkBxL,EAAO8K,GAE1B9K,EAET,OAAO,IAAI0D,MAAM+H,OAAOV,KAIbW,EAAiB,SAAC1H,GAC7B,OAAKA,EACgB,kBAAVA,EACF2H,EAAgB3H,EAAO,IAEX,oBAAVA,EACF,eAAcA,EAAMsG,MAAQ,aAAW,IAEzCtG,EAPYA,GAiBrB,SAAS2H,EAAgBzM,EAAW0M,G,QAC5BlC,EAAS,GACfkC,EAAKpI,KAAKtE,G,IACV,IAAkB,eAAOyF,KAAKzF,IAAK2M,YAAA,OAAAA,WAAE,CAAhC,IAAMC,EAAG,QACN9H,EAAQ9E,EAAK4M,GACE,oBAAV9H,IAGNA,GAA0B,kBAAVA,GAIY,IAA7B4H,EAAKG,QAAQ7M,EAAK4M,IAItBpC,EAAGoC,GAAO,aAHRpC,EAAGoC,GAAOH,EAAgBzM,EAAK4M,GAAMF,EAAK1E,MAAM,IAJhDwC,EAAGoC,GAAO9H,I,iGAkBd,MATyB,kBAAd9E,EAAKoL,OACdZ,EAAGY,KAAOpL,EAAKoL,MAEW,kBAAjBpL,EAAK/B,UACduM,EAAGvM,QAAU+B,EAAK/B,SAEM,kBAAf+B,EAAK0L,QACdlB,EAAGkB,MAAQ1L,EAAK0L,OAEXlB,EClHF,IAAMsC,EAA2BxB,EACtC,uBAEWyB,EAAsBzB,EACjC,uBAEW0B,EAAiB1B,EAAuB,kBACxC2B,EAAoB3B,EAAuB,qBAC3C4B,EAAkB5B,EAAuB,mBACzC6B,EAAiB7B,EAAuB,kBACxC8B,EAAuB9B,EAClC,wBAEW+B,EAAuB/B,EAClC,wBAEWgC,EAA8BhC,EACzC,+BAEWiC,EAAgCjC,EAC3C,iCAEWkC,EAAwBlC,EAAuB,oBAC/CmC,EAA4BnC,EACvC,6BAEWoC,EAA8BpC,EACzC,+BAEWqC,EAAsBrC,EACjC,uBAEWsC,EAAetC,EAAuB,gBACtCuC,EAAoBvC,EAAuB,qBAC3CwC,EAAmBxC,EAAuB,oBAC1CyC,EAA2BzC,EACtC,4BAEW9M,EAAqB8M,EAAuB,sBAC5ClL,EAAoCkL,EAC/C,qCAEW0C,EAAqB1C,EAAuB,iBAC5C2C,EAAiC3C,EAC5C,kCAEW4C,EAAsB5C,EACjC,uBAEW6C,EAAwB7C,EACnC,yBAEW8C,EAAgB9C,EAAuB,iBACvC+C,EAAgB/C,EAAuB,iBACvCgD,EAAiBhD,EAAuB,kBACxCiD,EAA+CjD,EAC1D,gDAEWkD,EAA0BlD,EACrC,2BAEWmD,EAAanD,EAAuB,cACpCoD,EAAiBpD,EAAuB,kBACxCqD,EAA4BrD,EACvC,6BAEWsD,EAAwBtD,EACnC,yBAEWuD,EAAkCvD,EAC7C,8BAEWwD,EAA2BxD,EACtC,uBAEWyD,EAA+BzD,EAC1C,gCAEW0D,EAAiC1D,EAC5C,kCAEW2D,EAA2B3D,EACtC,uBAEW4D,EAAqC5D,EAChD,iCAEW6D,EAA6B7D,EACxC,yBAEW8D,EAAyB9D,EACpC,0BAEW+D,EAAc/D,EAAuB,eACrCgE,EAAmBhE,EAAuB,oBAC1CiE,GAAmBjE,EAAuB,oBAC1CkE,GAA6BlE,EACxC,8BAEWmE,GAAkCnE,EAC7C,mCAEWoE,GAA4BpE,EACvC,6BAEWqE,GAA+CrE,EAC1D,gDAEWsE,GAAmBtE,EAAuB,oBAC1CuE,GAAevE,EAAuB,gBACtCwE,GAA4BxE,EACvC,6BAEWyE,GAAsBzE,EACjC,uBAEW0E,GAA0B1E,EACrC,sBAEW2E,GAAyB3E,EACpC,qBAEW4E,GAA8B5E,EACzC,+BAEW6E,GAAwB7E,EACnC,yBAEW8E,GAAgB9E,EAAuB,iBACvC+E,GAAuB/E,EAClC,wBAEWgF,GAA2BhF,EACtC,4BAEWiF,GAAoBjF,EAAuB,qBAC3CkF,GAA2ClF,EACtD,4CAEWmF,GAAwCnF,EACnD,yCAEWoF,GAAsBpF,EACjC,uBAEWqF,GAAsBrF,EACjC,uBAEWsF,GAAqBtF,EAAuB,sBAC5CuF,GAAgBvF,EAAuB,iBACvCwF,GAA8BxF,EACzC,+BAEWyF,GAAqBzF,EAAuB,sBAC5C0F,GAA4B1F,EACvC,6BAEW2F,GAA0B3F,EACrC,2BAEW4F,GAAsB5F,EACjC,uBAEWnK,GAA6BmK,EACxC,8BAEWzN,GAAiCyN,EAC5C,kCAEW6F,GAAyB7F,EACpC,0BAEWpK,GAAiCoK,EAC5C,kCAEW8F,GAAwB9F,EACnC,yBAEW+F,GAA2B/F,EACtC,4BAEWgG,GAA4BhG,EACvC,6BAEWiG,GAAwBjG,EACnC,yBAEWkG,GAAsBlG,EACjC,uBAEWmG,GAAmBnG,EAAuB,oBAC1CoG,GAAiBpG,EAAuB,kBACxCqG,GAAerG,EAAuB,gBACtCsG,GAActG,EAAuB,eACrCuG,GAAavG,EAAuB,cACpCwG,GAAYxG,EAAuB,aACnCyG,GAAgBzG,EAAuB,iBACvC0G,GAAqB1G,EAAuB,sBAC5C2G,GAAe3G,EAAuB,gBACtC4G,GAAe5G,EAAuB,gBACtC6G,GAA8B7G,EACzC,+BAIW8G,GAAgB9G,EAAuB,iBACvC+G,GAAkB/G,EAAuB,mBACzCgH,GAAahH,EAAuB,cAM3C,SAAUiH,GAAetU,EAAiBqF,GAC9C,KAAK8H,KAAO,iBACZ,KAAKnN,QAAUA,EACf,KAAKyN,OAAQ,IAAIlH,OAAQkH,MACzB,KAAKpI,GAAKA,EAEZiP,GAAe5G,UAAY,IAAInH,MAE/B2G,EACE,kBACA,SAAC9O,GAAM,WAAIkW,GAAelW,EAAE4B,QAAS5B,EAAEiH,OAGlC,IAAMkP,GAAc,CACzBC,uBAAwB,MACxBC,iBAAkB,MAClBC,2BAA4B,MAC5BC,oCAAqC,MACrCC,8BAA+B,MAC/BC,gCAAiC,MACjCC,eAAgB,MAChBC,wBAAyB,MACzBC,0BAA2B,MAC3BC,oBAAqB,MACrBC,gBAAiB,MACjBC,kBAAmB,MACnBC,kBAAmB,MACnBC,kBAAmB,MACnBC,GAAI,MACJC,eAAgB,MAChBC,eAAgB,MAChBC,eAAgB,MAChBC,eAAgB,MAChBC,kBAAmB,MACnBC,wBAAyB,MACzBC,YAAa,MACbC,qBAAsB,MACtBC,+BAAgC,MAChCC,iCAAkC,MAClCC,2BAA4B,MAC5BC,aAAc,MACdC,kBAAmB,MACnBC,eAAgB,MAChBC,UAAW,MACXC,OAAQ,OAGJ,SAAUC,GAAoBvT,GAClC,OAAQA,GAEN,KAAK,MACH,MAAO,mBACT,KAAK,MACH,MAAO,6BACT,KAAK,MACH,MAAO,uEACT,KAAK,MACH,MAAO,uDACT,KAAK,MACH,MAAO,wBACT,KAAK,MACH,MAAO,6BAEX,GAAI,OAAUA,GAAQA,GAAQ,MAC5B,MAAO,gCAQL,SAAUwT,GAAqBC,GACnC,KAAKtJ,KAAO,uBACZ,IAAMuJ,EACJnP,OAAOC,KAAK+M,IAAa/U,MAAK,SAACmX,GAAM,UAAYA,KAAOF,MACxD,gBACIG,EAAOL,GAAoBE,IAAeC,EAC1CG,EAAgBJ,EAAWzV,SAAS,IAC1C,KAAKhB,QAAU,kBAAkB4W,EAAI,OAAOC,EAAa,IACzD,KAAKpJ,OAAQ,IAAIlH,OAAQkH,MACzB,KAAKgJ,WAAaA,EAClB,KAAKC,WAAaA,EAEpBF,GAAqB9I,UAAY,IAAInH,MAErC2G,EACE,wBACA,SAAC9O,GAAM,WAAIoY,GAAqBpY,EAAEqY,gB,oBC3TpC,MAAM,0BAAEK,GAA8BpT,EAAQ,KACxCD,EAAQC,EAAQ,KAIhBG,GAHN4C,EAAUD,EAAOC,QAAU,IAGR5C,GAAK,GAClBkT,EAAMtQ,EAAQsQ,IAAM,GACpBjT,EAAI2C,EAAQ3C,EAAI,GACtB,IAAIkT,EAAI,EAER,MAAMC,EAAc,CAAC9J,EAAMtG,EAAOqQ,KAChC,MAAMC,EAAQH,IACdvT,EAAM0J,EAAMgK,EAAOtQ,GACnB/C,EAAEqJ,GAAQgK,EACVJ,EAAII,GAAStQ,EACbhD,EAAGsT,GAAS,IAAIC,OAAOvQ,EAAOqQ,EAAW,SAAMlR,IASjDiR,EAAY,oBAAqB,eACjCA,EAAY,yBAA0B,UAMtCA,EAAY,uBAAwB,8BAKpCA,EAAY,cAAe,WAAIF,EAAIjT,EAAEuT,mBAAV,mBACJN,EAAIjT,EAAEuT,mBADF,mBAEJN,EAAIjT,EAAEuT,mBAFF,MAI3BJ,EAAY,mBAAoB,WAAIF,EAAIjT,EAAEwT,wBAAV,mBACJP,EAAIjT,EAAEwT,wBADF,mBAEJP,EAAIjT,EAAEwT,wBAFF,MAOhCL,EAAY,uBAAD,aAA+BF,EAAIjT,EAAEuT,mBAArC,YACPN,EAAIjT,EAAEyT,sBADC,MAGXN,EAAY,4BAAD,aAAoCF,EAAIjT,EAAEwT,wBAA1C,YACPP,EAAIjT,EAAEyT,sBADC,MAOXN,EAAY,aAAD,eAAuBF,EAAIjT,EAAE0T,sBAA7B,iBACFT,EAAIjT,EAAE0T,sBADJ,SAGXP,EAAY,kBAAD,gBAA6BF,EAAIjT,EAAE2T,2BAAnC,iBACFV,EAAIjT,EAAE2T,2BADJ,SAMXR,EAAY,kBAAmB,iBAM/BA,EAAY,QAAD,iBAAoBF,EAAIjT,EAAE4T,iBAA1B,iBACFX,EAAIjT,EAAE4T,iBADJ,SAYXT,EAAY,YAAD,YAAmBF,EAAIjT,EAAE6T,cAAzB,OACRZ,EAAIjT,EAAE8T,YADE,YAETb,EAAIjT,EAAE+T,OAFG,MAIXZ,EAAY,OAAD,WAAaF,EAAIjT,EAAEgU,WAAnB,MAKXb,EAAY,aAAD,kBAA0BF,EAAIjT,EAAEiU,mBAAhC,OACRhB,EAAIjT,EAAEkU,iBADE,YAETjB,EAAIjT,EAAE+T,OAFG,MAIXZ,EAAY,QAAD,WAAcF,EAAIjT,EAAEmU,YAApB,MAEXhB,EAAY,OAAQ,gBAKpBA,EAAY,wBAAD,UAA6BF,EAAIjT,EAAEwT,wBAAnC,aACXL,EAAY,mBAAD,UAAwBF,EAAIjT,EAAEuT,mBAA9B,aAEXJ,EAAY,cAAe,mBAAYF,EAAIjT,EAAEoU,kBAAlB,sBACEnB,EAAIjT,EAAEoU,kBADR,sBAEEnB,EAAIjT,EAAEoU,kBAFR,kBAGFnB,EAAIjT,EAAE8T,YAHJ,aAINb,EAAIjT,EAAE+T,OAJA,aAO3BZ,EAAY,mBAAoB,mBAAYF,EAAIjT,EAAEqU,uBAAlB,sBACEpB,EAAIjT,EAAEqU,uBADR,sBAEEpB,EAAIjT,EAAEqU,uBAFR,kBAGFpB,EAAIjT,EAAEkU,iBAHJ,aAINjB,EAAIjT,EAAE+T,OAJA,aAOhCZ,EAAY,SAAD,WAAeF,EAAIjT,EAAEsU,MAArB,eAAiCrB,EAAIjT,EAAEuU,aAAvC,MACXpB,EAAY,cAAD,WAAoBF,EAAIjT,EAAEsU,MAA1B,eAAsCrB,EAAIjT,EAAEwU,kBAA5C,MAIXrB,EAAY,SAAU,UAAG,qBAAH,OACIH,EADJ,6BAEQA,EAFR,+BAGQA,EAHR,wBAKtBG,EAAY,YAAaF,EAAIjT,EAAEyU,SAAS,GAIxCtB,EAAY,YAAa,WAEzBA,EAAY,YAAD,gBAAuBF,EAAIjT,EAAE0U,WAA7B,SAA+C,GAC1D/R,EAAQ6B,iBAAmB,MAE3B2O,EAAY,QAAD,WAAcF,EAAIjT,EAAE0U,YAApB,OAAiCzB,EAAIjT,EAAEuU,aAAvC,MACXpB,EAAY,aAAD,WAAmBF,EAAIjT,EAAE0U,YAAzB,OAAsCzB,EAAIjT,EAAEwU,kBAA5C,MAIXrB,EAAY,YAAa,WAEzBA,EAAY,YAAD,gBAAuBF,EAAIjT,EAAE2U,WAA7B,SAA+C,GAC1DhS,EAAQ+B,iBAAmB,MAE3ByO,EAAY,QAAD,WAAcF,EAAIjT,EAAE2U,YAApB,OAAiC1B,EAAIjT,EAAEuU,aAAvC,MACXpB,EAAY,aAAD,WAAmBF,EAAIjT,EAAE2U,YAAzB,OAAsC1B,EAAIjT,EAAEwU,kBAA5C,MAGXrB,EAAY,kBAAD,WAAwBF,EAAIjT,EAAEsU,MAA9B,gBAA2CrB,EAAIjT,EAAEmU,YAAjD,UACXhB,EAAY,aAAD,WAAmBF,EAAIjT,EAAEsU,MAAzB,gBAAsCrB,EAAIjT,EAAEgU,WAA5C,UAIXb,EAAY,iBAAD,gBAA4BF,EAAIjT,EAAEsU,MAAlC,gBACHrB,EAAIjT,EAAEmU,YADH,YACkBlB,EAAIjT,EAAEuU,aADxB,MACyC,GACpD5R,EAAQ0B,sBAAwB,SAMhC8O,EAAY,cAAe,gBAASF,EAAIjT,EAAEuU,aAAf,4BAEJtB,EAAIjT,EAAEuU,aAFF,cAK3BpB,EAAY,mBAAoB,gBAASF,EAAIjT,EAAEwU,kBAAf,4BAEJvB,EAAIjT,EAAEwU,kBAFF,cAMhCrB,EAAY,OAAQ,mBAEpBA,EAAY,OAAQ,6BACpBA,EAAY,UAAW,gC,oBCrLvB,MAAM,WAAEtT,GAAeD,EAAQ,MACzB,GAAEG,EAAF,EAAMC,GAAMJ,EAAQ,KACpBO,EAASP,EAAQ,KAEjBK,EAAeL,EAAQ,KA4B7B8C,EAAOC,QA3BO,CAACtC,EAASC,KAGtB,GAFAA,EAAUL,EAAaK,GAEnBD,aAAmBF,EACrB,OAAOE,EAGT,GAAuB,kBAAZA,EACT,OAAO,KAGT,GAAIA,EAAQlF,OAAS0E,EACnB,OAAO,KAIT,KADUS,EAAQC,MAAQR,EAAGC,EAAEc,OAASf,EAAGC,EAAEe,OACtCS,KAAKnB,GACV,OAAO,KAGT,IACE,OAAO,IAAIF,EAAOE,EAASC,GAC3B,MAAOuF,GACP,OAAO,Q,kBC1BX,MAGM/F,EAAmB8U,OAAO9U,kBACL,iBAK3B4C,EAAOC,QAAU,CACfkS,oBAV0B,QAW1BhV,WATiB,IAUjBC,mBACAkT,0BANgC,K,qBCTlC,kBAAMrT,EACe,kBAAZmV,GACPA,kJACAA,iJAAYC,YACZ,cAAcvT,KAAKsT,iJAAYC,YAC7B,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAaxV,QAAQT,MAAM,YAAaiW,IACxC,OAEJtS,EAAOC,QAAUhD,I,oCCNjB,MAAMsV,EAAO,CAAC,oBAAqB,QAAS,OAQ5CvS,EAAOC,QAPcrC,GAClBA,EACoB,kBAAZA,EAAuB,CAAEC,OAAO,GACvC0U,EAAK/R,QAAO2P,GAAKvS,EAAQuS,KAAIqC,QAAO,CAACC,EAAGtC,KACxCsC,EAAEtC,IAAK,EACAsC,IACN,IALQ,I,oBCJb,MAAMtT,EAAUjC,EAAQ,KAExB8C,EAAOC,QADI,CAAC/G,EAAGqG,EAAG1B,IAAUsB,EAAQjG,EAAGqG,EAAG1B,GAAS,G,oBCDnD,MAAMyI,EAAMoM,OAAO,cAEnB,MAAMtS,EACOkG,iBACT,OAAOA,EAGT5I,YAAauE,EAAMrE,GAGjB,GAFAA,EAAUL,EAAaK,GAEnBqE,aAAgB7B,EAAY,CAC9B,GAAI6B,EAAKpE,UAAYD,EAAQC,MAC3B,OAAOoE,EAEPA,EAAOA,EAAK5B,MAIhBpD,EAAM,aAAcgF,EAAMrE,GAC1BI,KAAKJ,QAAUA,EACfI,KAAKH,QAAUD,EAAQC,MACvBG,KAAKuJ,MAAMtF,GAEPjE,KAAKqI,SAAWC,EAClBtI,KAAKqC,MAAQ,GAEbrC,KAAKqC,MAAQrC,KAAK2U,SAAW3U,KAAKqI,OAAO1I,QAG3CV,EAAM,OAAQe,MAGhBuJ,MAAOtF,GACL,MAAM7G,EAAI4C,KAAKJ,QAAQC,MAAQR,EAAGC,EAAE8E,iBAAmB/E,EAAGC,EAAEsV,YACtD3U,EAAIgE,EAAK9D,MAAM/C,GAErB,IAAK6C,EACH,MAAM,IAAIF,UAAJ,8BAAqCkE,IAG7CjE,KAAK2U,cAAoBnT,IAATvB,EAAE,GAAmBA,EAAE,GAAK,GACtB,MAAlBD,KAAK2U,WACP3U,KAAK2U,SAAW,IAIb1U,EAAE,GAGLD,KAAKqI,OAAS,IAAI5I,EAAOQ,EAAE,GAAID,KAAKJ,QAAQC,OAF5CG,KAAKqI,OAASC,EAMlB9L,WACE,OAAOwD,KAAKqC,MAGdvB,KAAMnB,GAGJ,GAFAV,EAAM,kBAAmBU,EAASK,KAAKJ,QAAQC,OAE3CG,KAAKqI,SAAWC,GAAO3I,IAAY2I,EACrC,OAAO,EAGT,GAAuB,kBAAZ3I,EACT,IACEA,EAAU,IAAIF,EAAOE,EAASK,KAAKJ,SACnC,MAAOuF,GACP,OAAO,EAIX,OAAO0P,EAAIlV,EAASK,KAAK2U,SAAU3U,KAAKqI,OAAQrI,KAAKJ,SAGvDgF,WAAYX,EAAMrE,GAChB,KAAMqE,aAAgB7B,GACpB,MAAM,IAAIrC,UAAU,4BAUtB,GAPKH,GAA8B,kBAAZA,IACrBA,EAAU,CACRC,QAASD,EACTE,mBAAmB,IAID,KAAlBE,KAAK2U,SACP,MAAmB,KAAf3U,KAAKqC,OAGF,IAAIH,EAAM+B,EAAK5B,MAAOzC,GAASkB,KAAKd,KAAKqC,OAC3C,GAAsB,KAAlB4B,EAAK0Q,SACd,MAAmB,KAAf1Q,EAAK5B,OAGF,IAAIH,EAAMlC,KAAKqC,MAAOzC,GAASkB,KAAKmD,EAAKoE,QAGlD,MAAMyM,GACe,OAAlB9U,KAAK2U,UAAuC,MAAlB3U,KAAK2U,YACb,OAAlB1Q,EAAK0Q,UAAuC,MAAlB1Q,EAAK0Q,UAC5BI,GACe,OAAlB/U,KAAK2U,UAAuC,MAAlB3U,KAAK2U,YACb,OAAlB1Q,EAAK0Q,UAAuC,MAAlB1Q,EAAK0Q,UAC5BK,EAAahV,KAAKqI,OAAO1I,UAAYsE,EAAKoE,OAAO1I,QACjDsV,GACe,OAAlBjV,KAAK2U,UAAuC,OAAlB3U,KAAK2U,YACb,OAAlB1Q,EAAK0Q,UAAuC,OAAlB1Q,EAAK0Q,UAC5BO,EACJL,EAAI7U,KAAKqI,OAAQ,IAAKpE,EAAKoE,OAAQzI,KAChB,OAAlBI,KAAK2U,UAAuC,MAAlB3U,KAAK2U,YACX,OAAlB1Q,EAAK0Q,UAAuC,MAAlB1Q,EAAK0Q,UAC9BQ,EACJN,EAAI7U,KAAKqI,OAAQ,IAAKpE,EAAKoE,OAAQzI,KAChB,OAAlBI,KAAK2U,UAAuC,MAAlB3U,KAAK2U,YACX,OAAlB1Q,EAAK0Q,UAAuC,MAAlB1Q,EAAK0Q,UAEpC,OACEG,GACAC,GACCC,GAAcC,GACfC,GACAC,GAKNnT,EAAOC,QAAUG,EAEjB,MAAM7C,EAAeL,EAAQ,MACvB,GAAEG,EAAF,EAAMC,GAAMJ,EAAQ,KACpB2V,EAAM3V,EAAQ,KACdD,EAAQC,EAAQ,KAChBO,EAASP,EAAQ,KACjBgD,EAAQhD,EAAQ,M,oBCvItB,MAAMgD,EAAQhD,EAAQ,KAStB8C,EAAOC,QARW,CAACtC,EAASwC,EAAOvC,KACjC,IACEuC,EAAQ,IAAID,EAAMC,EAAOvC,GACzB,MAAOuF,GACP,OAAO,EAET,OAAOhD,EAAMrB,KAAKnB,K,iCROpB,sCAAIkB,EAAK,EACHuU,EAA4B,GAOrB7Y,EAAM,SAAC2B,EAAc1C,EAAkBgC,GAClD,IAAM6X,EAAW,CACfnX,KAAI,EACJ2C,GAAIiJ,SAASjJ,GACbyU,KAAM,IAAIC,MAER/Z,IAAS6Z,EAAI7Z,QAAUA,GACvBgC,IAAM6X,EAAI7X,KAAOA,GAsBvB,SAAkBjB,GAChB,IAAK,IAAIM,EAAI,EAAGA,EAAIuY,EAAY3a,OAAQoC,IACtC,IACEuY,EAAYvY,GAAGN,GACf,MAAO3C,GACPkF,QAAQT,MAAMzE,IA1BlB4b,CAASH,IAuCW,qBAAX/W,SACTA,OAAOmX,mBAhCa,SAACC,GAErB,OADAN,EAAYvT,KAAK6T,GACV,WACL,IAAM7Y,EAAIuY,EAAYhL,QAAQsL,IAEnB,IAAP7Y,IAEFuY,EAAYvY,GAAKuY,EAAYA,EAAY3a,OAAS,GAClD2a,EAAY3P,W,kBS9ClB,MAAMkQ,EAAU,WACVnW,EAAqB,CAACtE,EAAGqG,KAC7B,MAAMqU,EAAOD,EAAQ7U,KAAK5F,GACpB2a,EAAOF,EAAQ7U,KAAKS,GAO1B,OALIqU,GAAQC,IACV3a,GAAKA,EACLqG,GAAKA,GAGArG,IAAMqG,EAAI,EACZqU,IAASC,GAAS,EAClBA,IAASD,EAAQ,EAClB1a,EAAIqG,GAAK,EACT,GAKNS,EAAOC,QAAU,CACfzC,qBACAsW,oBAJ0B,CAAC5a,EAAGqG,IAAM/B,EAAmB+B,EAAGrG,K,oBCjB5D,MAAMiG,EAAUjC,EAAQ,KAExB8C,EAAOC,QADI,CAAC/G,EAAGqG,EAAG1B,IAAmC,IAAzBsB,EAAQjG,EAAGqG,EAAG1B,I,oBCD1C,MAAMJ,EAASP,EAAQ,KAMvB8C,EAAOC,QALc,CAAC/G,EAAGqG,EAAG1B,KAC1B,MAAMkW,EAAW,IAAItW,EAAOvE,EAAG2E,GACzBmW,EAAW,IAAIvW,EAAO8B,EAAG1B,GAC/B,OAAOkW,EAAS5U,QAAQ6U,IAAaD,EAAStU,aAAauU,K,oBCJ7D,MAAM7U,EAAUjC,EAAQ,KAExB8C,EAAOC,QADI,CAAC/G,EAAGqG,EAAG1B,IAAUsB,EAAQjG,EAAGqG,EAAG1B,GAAS,G,oBCDnD,MAAMsB,EAAUjC,EAAQ,KAExB8C,EAAOC,QADK,CAAC/G,EAAGqG,EAAG1B,IAAUsB,EAAQjG,EAAGqG,EAAG1B,IAAU,G,oBCDrD,MAAMsB,EAAUjC,EAAQ,KAExB8C,EAAOC,QADK,CAAC/G,EAAGqG,EAAG1B,IAAUsB,EAAQjG,EAAGqG,EAAG1B,IAAU,G,oBCDrD,MAAMJ,EAASP,EAAQ,KACjBkD,EAAalD,EAAQ,MACrB,IAAEoJ,GAAQlG,EACVF,EAAQhD,EAAQ,KAChB+W,EAAY/W,EAAQ,KACpBgX,EAAKhX,EAAQ,KACbiX,EAAKjX,EAAQ,KACbkX,EAAMlX,EAAQ,KACdmX,EAAMnX,EAAQ,KAuEpB8C,EAAOC,QArES,CAACtC,EAASwC,EAAOmU,EAAM1W,KAIrC,IAAI2W,EAAMC,EAAOC,EAAMxS,EAAMyS,EAC7B,OAJA/W,EAAU,IAAIF,EAAOE,EAASC,GAC9BuC,EAAQ,IAAID,EAAMC,EAAOvC,GAGjB0W,GACN,IAAK,IACHC,EAAOL,EACPM,EAAQJ,EACRK,EAAON,EACPlS,EAAO,IACPyS,EAAQ,KACR,MACF,IAAK,IACHH,EAAOJ,EACPK,EAAQH,EACRI,EAAOP,EACPjS,EAAO,IACPyS,EAAQ,KACR,MACF,QACE,MAAM,IAAI3W,UAAU,yCAIxB,GAAIkW,EAAUtW,EAASwC,EAAOvC,GAC5B,OAAO,EAMT,IAAK,IAAI/C,EAAI,EAAGA,EAAIsF,EAAMG,IAAI7H,SAAUoC,EAAG,CACzC,MAAM0H,EAAcpC,EAAMG,IAAIzF,GAE9B,IAAI8Z,EAAO,KACPC,EAAM,KAiBV,GAfArS,EAAYsS,SAASC,IACfA,EAAWzO,SAAWC,IACxBwO,EAAa,IAAI1U,EAAW,YAE9BuU,EAAOA,GAAQG,EACfF,EAAMA,GAAOE,EACTP,EAAKO,EAAWzO,OAAQsO,EAAKtO,OAAQzI,GACvC+W,EAAOG,EACEL,EAAKK,EAAWzO,OAAQuO,EAAIvO,OAAQzI,KAC7CgX,EAAME,MAMNH,EAAKhC,WAAa1Q,GAAQ0S,EAAKhC,WAAa+B,EAC9C,OAAO,EAKT,KAAME,EAAIjC,UAAYiC,EAAIjC,WAAa1Q,IACnCuS,EAAM7W,EAASiX,EAAIvO,QACrB,OAAO,EACF,GAAIuO,EAAIjC,WAAa+B,GAASD,EAAK9W,EAASiX,EAAIvO,QACrD,OAAO,EAGX,OAAO,I,2GfrDG0O,E,mOAAZ,SAAYA,GACVA,cACAA,gBACAA,kBACAA,gBACAA,oBALF,CAAYA,MAAa,KAQzB,IAAMvc,IAAO,MACVuc,EAAcC,MAAO,CACpBnW,GAAIkW,EAAcC,KAClBC,YAAa,iBACbC,YAAa,EACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,OACZC,MAAO,CAAC,UAAY,WACpBC,aAAc,SAACC,GAAoC,cAErDnd,EAAC0c,EAAcU,OAAQ,CACrB5W,GAAIkW,EAAcU,MAClBR,YAAa,sBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,OACZC,MAAO,CAAC,WACRC,aAAc,SAACG,G,MACb,WAAOvB,GAAiC,QAA9B,MAAOwB,OAAOD,UAAgBrd,QAAI,GAAI,SAC5C,KACA,OAERA,EAAC0c,EAAca,QAAS,CACtB/W,GAAIkW,EAAca,OAClBX,YAAa,qBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACM,GAAqC,YAEtDxd,EAAC0c,EAAce,OAAQ,CACrBjX,GAAIkW,EAAce,MAClBb,YAAa,sBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACC,GAAoC,aACnDO,cAAe,CACb,CACEC,YAAa,uCACbC,WAAY,uCACZC,UAAW,uCACXC,aAAc,0CAIpB9d,EAAC0c,EAAcqB,SAAU,CACvBvX,GAAIkW,EAAcqB,QAClBnB,YAAa,wBACbC,YAAa,GACbC,mBAAoB,EACpBC,SAAS,EACTC,WAAY,QACZC,MAAO,CAAC,WACRC,aAAc,SAACC,GAAoC,aACnDO,cAAe,CACb,CACEC,YAAa,uCACbC,WAAY,uCACZC,UAAW,uCACXC,aAAc,0CAlET,GAgFPE,GAPEtB,EAAcC,KACVD,EAAcU,MACTV,EAAca,OACnBb,EAAce,MACZf,EAAcqB,QAGOrV,OAAO4B,OAAOnK,IAKpC8d,EAAoB,MA4BpBte,EAAuB,SAClCue,GAEA,IAAMC,EAASH,EAAYrd,MAAK,SAACyd,GAAM,SAAEtB,qBAAuBoB,KAChE,GAAIC,EAAQ,OAAOA,EACnB,IAAME,EAAKH,GAAgB,EAE3B,OADoBF,EAAYrd,MAAK,SAACyd,GAAM,SAAEvB,cAAgBwB,MAW1DC,EAA8B,GAC9BC,EAAqD,GAE3D,IAAK,IAAM/X,KAAMrG,EAAS,CACxB,IAAMT,EAAcS,EAAQqG,GACpB,EAAkB9G,EAAW,cACrC,GAAIge,EACF,IAAK,IAAIlb,EAAI,EAAGA,EAAIkb,EAActd,OAAQoC,IAAK,CAC7C,IAAMgc,EAAOd,EAAclb,GAC3B8b,EAAkB9W,KAAKgX,EAAKb,aAC5BY,EAAmBC,EAAKb,aAAeY,EACrCC,EAAKb,YAAYxU,QAAQ,KAAM,KAChCsV,GACC/e,YAAW,GACR8e,M,oBgB/KX,MAAM1X,EAAUjC,EAAQ,KAExB8C,EAAOC,QADK,CAAC/G,EAAGqG,EAAG1B,IAAmC,IAAzBsB,EAAQjG,EAAGqG,EAAG1B,I,oBCD3C,MAAMkZ,EAAK7Z,EAAQ,KACb8Z,EAAM9Z,EAAQ,KACdgX,EAAKhX,EAAQ,KACbmX,EAAMnX,EAAQ,KACdiX,EAAKjX,EAAQ,KACbkX,EAAMlX,EAAQ,KA8CpB8C,EAAOC,QA5CK,CAAC/G,EAAG+d,EAAI1X,EAAG1B,KACrB,OAAQoZ,GACN,IAAK,MAOH,MANiB,kBAAN/d,IACTA,EAAIA,EAAEyE,SAES,kBAAN4B,IACTA,EAAIA,EAAE5B,SAEDzE,IAAMqG,EAEf,IAAK,MAOH,MANiB,kBAANrG,IACTA,EAAIA,EAAEyE,SAES,kBAAN4B,IACTA,EAAIA,EAAE5B,SAEDzE,IAAMqG,EAEf,IAAK,GACL,IAAK,IACL,IAAK,KACH,OAAOwX,EAAG7d,EAAGqG,EAAG1B,GAElB,IAAK,KACH,OAAOmZ,EAAI9d,EAAGqG,EAAG1B,GAEnB,IAAK,IACH,OAAOqW,EAAGhb,EAAGqG,EAAG1B,GAElB,IAAK,KACH,OAAOwW,EAAInb,EAAGqG,EAAG1B,GAEnB,IAAK,IACH,OAAOsW,EAAGjb,EAAGqG,EAAG1B,GAElB,IAAK,KACH,OAAOuW,EAAIlb,EAAGqG,EAAG1B,GAEnB,QACE,MAAM,IAAIE,UAAJ,4BAAmCkZ,O,qqECI/C,qCACE,qBAAkB,IAClB,yBAAsB,KACtB,iBAA8C,KA8E9C,aAAU,IAAIC,IAuDd,UAAO,SACLC,EACAC,EACAC,EACAC,EACA9b,EACA+b,G,YADA,QAAA/b,EAAeF,EAAOkc,MAAM,SAC5B,QAAAD,GAA6BxJ,cAAYe,K,wFAEzC,GAAItT,EAAK/C,QAAU,IACjB,MAAM,IAAIqV,iBACR,4CAA8CtS,EAAK/C,OACnD,oBAIa,SAAM,KAAKgf,SAC1Bnc,EAAOoc,OAAO,CACZpc,EAAOC,KAAK,CAAC4b,EAAKC,EAAKC,EAAIC,IAC3Bhc,EAAOC,KAAK,CAACC,EAAK/C,SAClB+C,M,OAKJ,GATMmc,EAAWtf,SAOXuf,EAAKD,EAASE,aAAaF,EAASlf,OAAS,IAE9C8e,EAAWte,MAAK,SAAC6e,GAAM,WAAMF,KAChC,MAAM,IAAI5H,uBAAqB4H,GAGjC,SAAOD,WAuDT,wBAAqB,SACnBI,GAA+B,qC,uEAE/B,GAAI,KAAK9d,oBACP,MAAM,IAAIyS,yBACR,iFAKEsL,EAA6B,IAAIC,SAAQ,SAAC7c,GAC9C8c,EAAc9c,KAEhB,KAAKnB,oBAAsB+d,EACvBG,GAAsB,EACpBC,EAAUC,YAAW,WACzBF,GAAsB,EACtB3gB,EAAKM,KAAK,kBACT,KAAKwgB,qB,iBAGM,O,sBAAA,GAAMP,K,OAMlB,OANMQ,EAAMlgB,SAER8f,GACF,KAAKrgB,KAAK,cAGZ,GAAOygB,G,cAEPC,aAAaJ,GACTF,GAAaA,IACjB,KAAKje,oBAAsB,K,6BAmB/B,iBAA6B,KAgC/B,OA/OE2C,8BAAS6b,GACP,MAAM,IAAI1Y,MAAM,6BAQlBnD,oCAAe8b,KAMf9b,6BACE,OAAOqb,QAAQU,WAUjB/b,wBAAGgc,EAAmBlF,GACpB,KAAKmF,QAAQC,GAAGF,EAAWlF,IAM7B9W,yBAAIgc,EAAmBlF,GACrB,KAAKmF,QAAQE,eAAeH,EAAWlF,IAGzC9W,0BAAKoc,G,UAAe,gCAAA1G,qBAClB,OAAKuG,SAAQ/gB,KAAImhB,MAAA5gB,EAAA6gB,GAACF,GAAKG,EAAK7G,IAAI,KAMlC1V,oCACEE,QAAQC,KACN,iGAOJH,wCAAmBwc,GACjB,KAAKA,gBAAkBA,GAMzBxc,oDAA+B0b,GAC7B,KAAKA,oBAAsBA,GAmDtB1b,SAAP,SACEyc,EACAC,GAFF,WAIE,YAHA,QAAAD,OAGO,IAAIpB,SAAQ,SAACU,EAASY,GAC3B,IAAIC,GAAQ,EACNC,EAAMjiB,EAAKkiB,OAAO,CACtBzd,KAAM,SAACrE,GACL4hB,GAAQ,EACJC,GAAKA,EAAI9c,cACTgd,GAAiBnB,aAAamB,GAClCniB,EAAKc,KAAKV,EAAEuE,WAAYkd,GAAard,KAAK2c,EAASY,IAErDld,MAAO,SAACzE,GACF+hB,GAAiBnB,aAAamB,GAClCJ,EAAO3hB,IAETwE,SAAU,WACJud,GAAiBnB,aAAamB,GAE7BH,GACHD,EACE,IAAIzL,iBACFtW,EAAKoiB,2BACL,qBAMJD,EAAkBL,EACpBjB,YAAW,WACToB,EAAI9c,cACJ4c,EACE,IAAIzL,iBACFtW,EAAKqiB,2BACL,oBAGHP,GACH,SAwCR1c,2CACEkd,EACAC,EACAC,G,YAEA,IAAyB,WAAOC,YAAA,OAAAA,WAAE,CAA7B,IAAMC,EAAU,QACnBJ,EAAKI,GAAc,KAAKC,qBACtBD,EACAJ,EAAKI,GACLJ,EACAE,I,mGAONpd,0CACEsd,EACAnC,EACAqC,EACAJ,GAJF,WAME,OAAO,W,IAAO,oCAAA1H,kB,6FAGZ,GAFQ+H,EAAgB,KAAIA,YAG1B,SAAOpC,QAAQsB,OACb,IAAIzL,iBACF,+BAAiCuM,EAAc,IAC/C,qB,iBAQG,O,sBAFP,KAAKA,YAAcH,EACnB,KAAKI,eAAeN,GACb,GAAMjC,EAAEkB,MAAMmB,EAAK9H,I,OAA1B,SAAOja,U,cAEP,KAAKgiB,YAAc,K,8BAKlBzd,6BAA6B,mCAC7BA,6BAA6B,yBACtC,EA7SA,GAAqBA,Q,uFCpDrB,aAWA,SAAS2d,EAAWla,GAClB,IAAMd,EAAIjE,EAAOkc,MAAM,GAEvB,OADAjY,EAAEib,cAAcna,EAAO,GAChBd,EAGT,IAAMkb,EAAa,CACjBjf,KAAMF,EAAOkc,MAAM,GACnBkD,WAAY,EACZC,SAAU,GAwEZ1a,UAlEyB,SAAC5F,EAAiBC,GACzC,MAAO,CACLM,WAAA,SAAWT,GACT,IAAIqB,EAAOF,EAAOoc,OAAO,CAAC6C,EAAWpgB,EAAK1B,QAAS0B,IAC7CygB,EAAYtgB,EAAa,EACzBugB,EAAWpjB,KAAKqjB,KAAKtf,EAAK/C,OAASmiB,GACzCpf,EAAOF,EAAOoc,OAAO,CACnBlc,EACAF,EAAOkc,MAAMqD,EAAWD,EAAYpf,EAAK/C,OAAS,GAAGsiB,KAAK,KAI5D,IAFA,IAAMpgB,EAAmB,GAEhBE,EAAI,EAAGA,EAAIggB,EAAUhgB,IAAK,CACjC,IAAMmgB,EAAO1f,EAAOkc,MAAM,GAC1BwD,EAAKR,cAAcngB,EAAS,GAC5B2gB,EAAKC,WAhCD,EAgCiB,GACrBD,EAAKR,cAAc3f,EAAG,GACtB,IAAMqgB,EAAQ1f,EAAK+H,MAAM1I,EAAI+f,GAAY/f,EAAI,GAAK+f,GAClDjgB,EAAOkF,KAAKvE,EAAOoc,OAAO,CAACsD,EAAME,KAGnC,OAAOvgB,GAGTc,eAAA,SAAeP,EAAkBggB,GAC3B,MAAiChgB,GAAOuf,EAAtCjf,EAAI,OAAEkf,EAAU,aAAEC,EAAQ,WAEhC,GAAIO,EAAMrD,aAAa,KAAOxd,EAC5B,MAAM,IAAI8gB,iBAAe,kBAAmB,kBAG9C,GAhDM,IAgDFD,EAAME,UAAU,GAClB,MAAM,IAAID,iBAAe,cAAe,cAG1C,GAAID,EAAMrD,aAAa,KAAO8C,EAC5B,MAAM,IAAIQ,iBAAe,mBAAoB,mBAG1CjgB,IACHwf,EAAaQ,EAAMrD,aAAa,IAGlC8C,IACA,IAAMU,EAAYH,EAAM3X,MAAMrI,EAAM,EAAI,GAOxC,OANAM,EAAOF,EAAOoc,OAAO,CAAClc,EAAM6f,KAEnB5iB,OAASiiB,IAChBlf,EAAOA,EAAK+H,MAAM,EAAGmX,IAGhB,CACLlf,KAAI,EACJkf,WAAU,EACVC,SAAQ,IAIZ1f,iBAAA,SAAiBC,GACf,GAAIA,GAAOA,EAAIwf,aAAexf,EAAIM,KAAK/C,OACrC,OAAOyC,EAAIM,U,6CCrFnB,MAAM8f,EAAape,EAAQ,KAC3B8C,EAAOC,QAAU,CACf5C,GAAIie,EAAWje,GACfkT,IAAK+K,EAAW/K,IAChBgL,OAAQD,EAAWhe,EACnB6U,oBAAqBjV,EAAQ,KAAwBiV,oBACrD1U,OAAQP,EAAQ,KAChBM,mBAAoBN,EAAQ,KAA0BM,mBACtDsW,oBAAqB5W,EAAQ,KAA0B4W,oBACvDvM,MAAOrK,EAAQ,KACfse,MAAOte,EAAQ,KACfue,MAAOve,EAAQ,KACfwC,IAAKxC,EAAQ,KACbwe,KAAMxe,EAAQ,KACdqB,MAAOrB,EAAQ,KACfsB,MAAOtB,EAAQ,KACfuB,MAAOvB,EAAQ,KACfwB,WAAYxB,EAAQ,KACpBiC,QAASjC,EAAQ,KACjBye,SAAUze,EAAQ,KAClB0e,aAAc1e,EAAQ,KACtBuC,aAAcvC,EAAQ,KACtB2e,KAAM3e,EAAQ,KACd4e,MAAO5e,EAAQ,KACfgX,GAAIhX,EAAQ,KACZiX,GAAIjX,EAAQ,KACZ6Z,GAAI7Z,EAAQ,KACZ8Z,IAAK9Z,EAAQ,KACbmX,IAAKnX,EAAQ,KACbkX,IAAKlX,EAAQ,KACb2V,IAAK3V,EAAQ,KACbyY,OAAQzY,EAAQ,KAChBkD,WAAYlD,EAAQ,KACpBgD,MAAOhD,EAAQ,KACf+W,UAAW/W,EAAQ,KACnB6e,cAAe7e,EAAQ,KACvB8e,cAAe9e,EAAQ,KACvB+e,cAAe/e,EAAQ,KACvBgf,WAAYhf,EAAQ,KACpBif,WAAYjf,EAAQ,KACpBkf,QAASlf,EAAQ,KACjBmf,IAAKnf,EAAQ,KACbof,IAAKpf,EAAQ,KACb0F,WAAY1F,EAAQ,KACpBqf,cAAerf,EAAQ,KACvBsf,OAAQtf,EAAQ,O,oBC9ClB,MAAMqK,EAAQrK,EAAQ,KAKtB8C,EAAOC,QAJO,CAACtC,EAASC,KACtB,MAAM6e,EAAIlV,EAAM5J,EAASC,GACzB,OAAO6e,EAAIA,EAAE9e,QAAU,O,oBCHzB,MAAM4J,EAAQrK,EAAQ,KAKtB8C,EAAOC,QAJO,CAACtC,EAASC,KACtB,MAAMka,EAAIvQ,EAAM5J,EAAQO,OAAOsD,QAAQ,SAAU,IAAK5D,GACtD,OAAOka,EAAIA,EAAEna,QAAU,O,oBCHzB,MAAMF,EAASP,EAAQ,KAiBvB8C,EAAOC,QAfK,CAACtC,EAASgC,EAAS/B,EAASgC,KACb,kBAAbhC,IACVgC,EAAahC,EACbA,OAAU4B,GAGZ,IACE,OAAO,IAAI/B,EACTE,aAAmBF,EAASE,EAAQA,QAAUA,EAC9CC,GACA8B,IAAIC,EAASC,GAAYjC,QAC3B,MAAOwF,GACP,OAAO,Q,oBCdX,MAAMoE,EAAQrK,EAAQ,KAChB6Z,EAAK7Z,EAAQ,KAqBnB8C,EAAOC,QAnBM,CAACyc,EAAUC,KACtB,GAAI5F,EAAG2F,EAAUC,GACf,OAAO,KACF,CACL,MAAMC,EAAKrV,EAAMmV,GACXG,EAAKtV,EAAMoV,GACXG,EAASF,EAAGle,WAAWjG,QAAUokB,EAAGne,WAAWjG,OAC/CskB,EAASD,EAAS,MAAQ,GAC1BE,EAAgBF,EAAS,aAAe,GAC9C,IAAK,MAAM3U,KAAOyU,EAChB,IAAY,UAARzU,GAA2B,UAARA,GAA2B,UAARA,IACpCyU,EAAGzU,KAAS0U,EAAG1U,GACjB,OAAO4U,EAAS5U,EAItB,OAAO6U,K,oBCnBX,MAAMvf,EAASP,EAAQ,KAEvB8C,EAAOC,QADO,CAAC/G,EAAG2E,IAAU,IAAIJ,EAAOvE,EAAG2E,GAAOU,O,oBCDjD,MAAMd,EAASP,EAAQ,KAEvB8C,EAAOC,QADO,CAAC/G,EAAG2E,IAAU,IAAIJ,EAAOvE,EAAG2E,GAAOW,O,oBCDjD,MAAMf,EAASP,EAAQ,KAEvB8C,EAAOC,QADO,CAAC/G,EAAG2E,IAAU,IAAIJ,EAAOvE,EAAG2E,GAAOY,O,oBCDjD,MAAM8I,EAAQrK,EAAQ,KAKtB8C,EAAOC,QAJY,CAACtC,EAASC,KAC3B,MAAMqf,EAAS1V,EAAM5J,EAASC,GAC9B,OAAQqf,GAAUA,EAAOve,WAAWjG,OAAUwkB,EAAOve,WAAa,O,oBCHpE,MAAMS,EAAUjC,EAAQ,KAExB8C,EAAOC,QADU,CAAC/G,EAAGqG,EAAG1B,IAAUsB,EAAQI,EAAGrG,EAAG2E,I,oBCDhD,MAAMsB,EAAUjC,EAAQ,KAExB8C,EAAOC,QADc,CAAC/G,EAAGqG,IAAMJ,EAAQjG,EAAGqG,GAAG,I,oBCD7C,MAAME,EAAevC,EAAQ,KAE7B8C,EAAOC,QADM,CAACid,EAAMrf,IAAUqf,EAAKrB,MAAK,CAAC3iB,EAAGqG,IAAME,EAAavG,EAAGqG,EAAG1B,M,oBCDrE,MAAM4B,EAAevC,EAAQ,KAE7B8C,EAAOC,QADO,CAACid,EAAMrf,IAAUqf,EAAKrB,MAAK,CAAC3iB,EAAGqG,IAAME,EAAaF,EAAGrG,EAAG2E,M,oBCDtE,MAAMJ,EAASP,EAAQ,KACjBqK,EAAQrK,EAAQ,MAChB,GAAEG,EAAF,EAAMC,GAAMJ,EAAQ,KAiD1B8C,EAAOC,QA/CQ,CAACtC,EAASC,KACvB,GAAID,aAAmBF,EACrB,OAAOE,EAOT,GAJuB,kBAAZA,IACTA,EAAUmK,OAAOnK,IAGI,kBAAZA,EACT,OAAO,KAKT,IAAIQ,EAAQ,KACZ,IAHAP,EAAUA,GAAW,IAGRuf,IAEN,CASL,IAAIlhB,EACJ,MAAQA,EAAOoB,EAAGC,EAAE8f,WAAWC,KAAK1f,OAC9BQ,GAASA,EAAMwS,MAAQxS,EAAM,GAAG1F,SAAWkF,EAAQlF,SAElD0F,GACClC,EAAK0U,MAAQ1U,EAAK,GAAGxD,SAAW0F,EAAMwS,MAAQxS,EAAM,GAAG1F,SAC3D0F,EAAQlC,GAEVoB,EAAGC,EAAE8f,WAAWE,UAAYrhB,EAAK0U,MAAQ1U,EAAK,GAAGxD,OAASwD,EAAK,GAAGxD,OAGpE4E,EAAGC,EAAE8f,WAAWE,WAAa,OArB7Bnf,EAAQR,EAAQQ,MAAMd,EAAGC,EAAEyU,SAwB7B,OAAc,OAAV5T,EACK,KAGFoJ,EAAM,GAAD,OAAIpJ,EAAM,GAAV,YAAgBA,EAAM,IAAM,IAA5B,YAAmCA,EAAM,IAAM,KAAOP,K,iCC9CpE,MAAM2f,EAAUrgB,EAAQ,KAElBsgB,EAAM9K,OAAO,OACb+K,EAAS/K,OAAO,UAChBgL,EAAoBhL,OAAO,oBAC3BiL,EAAcjL,OAAO,cACrBkL,EAAUlL,OAAO,UACjBmL,EAAUnL,OAAO,WACjBoL,EAAoBpL,OAAO,kBAC3BqL,EAAWrL,OAAO,WAClBsL,EAAQtL,OAAO,SACfuL,EAAoBvL,OAAO,kBAE3BwL,EAAc,IAAM,EAkP1B,MAAM9c,EAAM,CAAC0Y,EAAM3R,EAAKgW,KACtB,MAAMC,EAAOtE,EAAKkE,GAAO5c,IAAI+G,GAC7B,GAAIiW,EAAM,CACR,MAAMC,EAAMD,EAAK/d,MACjB,GAAIie,EAAQxE,EAAMuE,IAEhB,GADAE,EAAIzE,EAAMsE,IACLtE,EAAK6D,GACR,YAEEQ,IACErE,EAAKmE,KACPG,EAAK/d,MAAMme,IAAMjL,KAAKiL,OACxB1E,EAAKiE,GAAUU,YAAYL,IAG/B,OAAOC,EAAIhe,QAITie,EAAU,CAACxE,EAAMuE,KACrB,IAAKA,IAASA,EAAIK,SAAW5E,EAAK8D,GAChC,OAAO,EAET,MAAMlC,EAAOnI,KAAKiL,MAAQH,EAAIG,IAC9B,OAAOH,EAAIK,OAAShD,EAAO2C,EAAIK,OAC3B5E,EAAK8D,IAAalC,EAAO5B,EAAK8D,IAG9B1f,EAAO4b,IACX,GAAIA,EAAK2D,GAAU3D,EAAK0D,GACtB,IAAK,IAAImB,EAAS7E,EAAKiE,GAAUa,KAC/B9E,EAAK2D,GAAU3D,EAAK0D,IAAmB,OAAXmB,GAAkB,CAI9C,MAAME,EAAOF,EAAOE,KACpBN,EAAIzE,EAAM6E,GACVA,EAASE,IAKTN,EAAM,CAACzE,EAAMsE,KACjB,GAAIA,EAAM,CACR,MAAMC,EAAMD,EAAK/d,MACbyZ,EAAK+D,IACP/D,EAAK+D,GAASQ,EAAIlW,IAAKkW,EAAIhe,OAE7ByZ,EAAK2D,IAAWY,EAAI5lB,OACpBqhB,EAAKkE,GAAOtb,OAAO2b,EAAIlW,KACvB2R,EAAKiE,GAAUe,WAAWV,KAI9B,MAAMW,EACJrhB,YAAayK,EAAK9H,EAAO5H,EAAQ+lB,EAAKE,GACpC1gB,KAAKmK,IAAMA,EACXnK,KAAKqC,MAAQA,EACbrC,KAAKvF,OAASA,EACduF,KAAKwgB,IAAMA,EACXxgB,KAAK0gB,OAASA,GAAU,GAI5B,MAAMM,EAAc,CAAClF,EAAMmF,EAAIb,EAAMc,KACnC,IAAIb,EAAMD,EAAK/d,MACXie,EAAQxE,EAAMuE,KAChBE,EAAIzE,EAAMsE,GACLtE,EAAK6D,KACRU,OAAM7e,IAEN6e,GACFY,EAAGE,KAAKD,EAAOb,EAAIhe,MAAOge,EAAIlW,IAAK2R,IAGvC9Z,EAAOC,QAnTP,MACEvC,YAAaE,GAOX,GANuB,kBAAZA,IACTA,EAAU,CAAEyF,IAAKzF,IAEdA,IACHA,EAAU,IAERA,EAAQyF,MAA+B,kBAAhBzF,EAAQyF,KAAoBzF,EAAQyF,IAAM,GACnE,MAAM,IAAItF,UAAU,qCAEVC,KAAKwf,GAAO5f,EAAQyF,KAAO+b,IAAvC,MAEMC,EAAKzhB,EAAQnF,QAAUylB,EAG7B,GAFAlgB,KAAK0f,GAAoC,oBAAP2B,EAAqBnB,EAAcmB,EACrErhB,KAAK2f,GAAe/f,EAAQ0hB,QAAS,EACjC1hB,EAAQ8gB,QAAoC,kBAAnB9gB,EAAQ8gB,OACnC,MAAM,IAAI3gB,UAAU,2BACtBC,KAAK4f,GAAWhgB,EAAQ8gB,QAAU,EAClC1gB,KAAK6f,GAAWjgB,EAAQ2hB,QACxBvhB,KAAK8f,GAAqBlgB,EAAQ4hB,iBAAkB,EACpDxhB,KAAKigB,GAAqBrgB,EAAQ6hB,iBAAkB,EACpDzhB,KAAKnB,QAIHwG,QAAKqc,GACP,GAAkB,kBAAPA,GAAmBA,EAAK,EACjC,MAAM,IAAI3hB,UAAU,qCAEtBC,KAAKwf,GAAOkC,GAAMN,IAClBlhB,EAAKF,MAEHqF,UACF,OAAOrF,KAAKwf,GAGVmC,eAAYA,GACd3hB,KAAK2f,KAAiBgC,EAEpBA,iBACF,OAAO3hB,KAAK2f,GAGVe,WAAQkB,GACV,GAAkB,kBAAPA,EACT,MAAM,IAAI7hB,UAAU,wCAEtBC,KAAK4f,GAAWgC,EAChB1hB,EAAKF,MAEH0gB,aACF,OAAO1gB,KAAK4f,GAIViC,qBAAkBC,GACF,oBAAPA,IACTA,EAAK5B,GAEH4B,IAAO9hB,KAAK0f,KACd1f,KAAK0f,GAAqBoC,EAC1B9hB,KAAKyf,GAAU,EACfzf,KAAK+f,GAAUlJ,SAAQwJ,IACrBA,EAAI5lB,OAASuF,KAAK0f,GAAmBW,EAAIhe,MAAOge,EAAIlW,KACpDnK,KAAKyf,IAAWY,EAAI5lB,WAGxByF,EAAKF,MAEH6hB,uBAAsB,OAAO7hB,KAAK0f,GAElCjlB,aAAY,OAAOuF,KAAKyf,GACxBsC,gBAAe,OAAO/hB,KAAK+f,GAAUtlB,OAEzCunB,SAAUf,EAAIC,GACZA,EAAQA,GAASlhB,KACjB,IAAK,IAAI2gB,EAAS3gB,KAAK+f,GAAUa,KAAiB,OAAXD,GAAkB,CACvD,MAAME,EAAOF,EAAOE,KACpBG,EAAYhhB,KAAMihB,EAAIN,EAAQO,GAC9BP,EAASE,GAIbhK,QAASoK,EAAIC,GACXA,EAAQA,GAASlhB,KACjB,IAAK,IAAI2gB,EAAS3gB,KAAK+f,GAAU/C,KAAiB,OAAX2D,GAAkB,CACvD,MAAM1iB,EAAO0iB,EAAO1iB,KACpB+iB,EAAYhhB,KAAMihB,EAAIN,EAAQO,GAC9BP,EAAS1iB,GAIb+E,OACE,OAAOhD,KAAK+f,GAAUkC,UAAUrhB,KAAIuR,GAAKA,EAAEhI,MAG7CxF,SACE,OAAO3E,KAAK+f,GAAUkC,UAAUrhB,KAAIuR,GAAKA,EAAE9P,QAG7CxD,QACMmB,KAAK6f,IACL7f,KAAK+f,IACL/f,KAAK+f,GAAUtlB,QACjBuF,KAAK+f,GAAUlJ,SAAQwJ,GAAOrgB,KAAK6f,GAASQ,EAAIlW,IAAKkW,EAAIhe,SAG3DrC,KAAKggB,GAAS,IAAI1b,IAClBtE,KAAK+f,GAAY,IAAIR,EACrBvf,KAAKyf,GAAU,EAGjByC,OACE,OAAOliB,KAAK+f,GAAUnf,KAAIyf,IACxBC,EAAQtgB,KAAMqgB,IAAe,CAC3BlO,EAAGkO,EAAIlW,IACPsU,EAAG4B,EAAIhe,MACPzI,EAAGymB,EAAIG,KAAOH,EAAIK,QAAU,MAC3BuB,UAAUzf,QAAO2f,GAAKA,IAG7BC,UACE,OAAOpiB,KAAK+f,GAGdzd,IAAK6H,EAAK9H,EAAOqe,GAGf,IAFAA,EAASA,GAAU1gB,KAAK4f,KAEQ,kBAAXc,EACnB,MAAM,IAAI3gB,UAAU,2BAEtB,MAAMygB,EAAME,EAASnL,KAAKiL,MAAQ,EAC5B6B,EAAMriB,KAAK0f,GAAmBrd,EAAO8H,GAE3C,GAAInK,KAAKggB,GAAOvb,IAAI0F,GAAM,CACxB,GAAIkY,EAAMriB,KAAKwf,GAEb,OADAe,EAAIvgB,KAAMA,KAAKggB,GAAO5c,IAAI+G,KACnB,EAGT,MACMmY,EADOtiB,KAAKggB,GAAO5c,IAAI+G,GACX9H,MAgBlB,OAZIrC,KAAK6f,KACF7f,KAAK8f,IACR9f,KAAK6f,GAAS1V,EAAKmY,EAAKjgB,QAG5BigB,EAAK9B,IAAMA,EACX8B,EAAK5B,OAASA,EACd4B,EAAKjgB,MAAQA,EACbrC,KAAKyf,IAAW4C,EAAMC,EAAK7nB,OAC3B6nB,EAAK7nB,OAAS4nB,EACdriB,KAAKoD,IAAI+G,GACTjK,EAAKF,OACE,EAGT,MAAMqgB,EAAM,IAAIU,EAAM5W,EAAK9H,EAAOggB,EAAK7B,EAAKE,GAG5C,OAAIL,EAAI5lB,OAASuF,KAAKwf,IAChBxf,KAAK6f,IACP7f,KAAK6f,GAAS1V,EAAK9H,IAEd,IAGTrC,KAAKyf,IAAWY,EAAI5lB,OACpBuF,KAAK+f,GAAUwC,QAAQlC,GACvBrgB,KAAKggB,GAAO1d,IAAI6H,EAAKnK,KAAK+f,GAAU/C,MACpC9c,EAAKF,OACE,GAGTyE,IAAK0F,GACH,IAAKnK,KAAKggB,GAAOvb,IAAI0F,GAAM,OAAO,EAClC,MAAMkW,EAAMrgB,KAAKggB,GAAO5c,IAAI+G,GAAK9H,MACjC,OAAQie,EAAQtgB,KAAMqgB,GAGxBjd,IAAK+G,GACH,OAAO/G,EAAIpD,KAAMmK,GAAK,GAGxBqY,KAAMrY,GACJ,OAAO/G,EAAIpD,KAAMmK,GAAK,GAGxB1E,MACE,MAAM2a,EAAOpgB,KAAK+f,GAAUa,KAC5B,OAAKR,GAGLG,EAAIvgB,KAAMogB,GACHA,EAAK/d,OAHH,KAMXke,IAAKpW,GACHoW,EAAIvgB,KAAMA,KAAKggB,GAAO5c,IAAI+G,IAG5BsY,KAAMC,GAEJ1iB,KAAKnB,QAEL,MAAM2hB,EAAMjL,KAAKiL,MAEjB,IAAK,IAAImC,EAAID,EAAIjoB,OAAS,EAAGkoB,GAAK,EAAGA,IAAK,CACxC,MAAMtC,EAAMqC,EAAIC,GACVC,EAAYvC,EAAIzmB,GAAK,EAC3B,GAAkB,IAAdgpB,EAEF5iB,KAAKsC,IAAI+d,EAAIlO,EAAGkO,EAAI5B,OACjB,CACH,MAAMiC,EAASkC,EAAYpC,EAEvBE,EAAS,GACX1gB,KAAKsC,IAAI+d,EAAIlO,EAAGkO,EAAI5B,EAAGiC,KAM/BmC,QACE7iB,KAAKggB,GAAOnJ,SAAQ,CAACxU,EAAO8H,IAAQ/G,EAAIpD,KAAMmK,GAAK,Q,iCCxPvD,SAASoV,EAASL,GAChB,IAAIpD,EAAO9b,KASX,GARM8b,aAAgByD,IACpBzD,EAAO,IAAIyD,GAGbzD,EAAK8E,KAAO,KACZ9E,EAAKkB,KAAO,KACZlB,EAAKrhB,OAAS,EAEVykB,GAAgC,oBAAjBA,EAAKrI,QACtBqI,EAAKrI,SAAQ,SAAUyL,GACrBxG,EAAKja,KAAKygB,WAEP,GAAIQ,UAAUroB,OAAS,EAC5B,IAAK,IAAIoC,EAAI,EAAG8lB,EAAIG,UAAUroB,OAAQoC,EAAI8lB,EAAG9lB,IAC3Cif,EAAKja,KAAKihB,UAAUjmB,IAIxB,OAAOif,EAoVT,SAASiH,EAAQjH,EAAMsE,EAAM/d,GAC3B,IAAI2gB,EAAW5C,IAAStE,EAAKkB,KAC3B,IAAIiG,EAAK5gB,EAAO,KAAM+d,EAAMtE,GAC5B,IAAImH,EAAK5gB,EAAO+d,EAAMA,EAAKniB,KAAM6d,GAWnC,OATsB,OAAlBkH,EAAS/kB,OACX6d,EAAK8E,KAAOoC,GAEQ,OAAlBA,EAASnC,OACX/E,EAAKkB,KAAOgG,GAGdlH,EAAKrhB,SAEEuoB,EAGT,SAASnhB,EAAMia,EAAMwG,GACnBxG,EAAK8E,KAAO,IAAIqC,EAAKX,EAAMxG,EAAK8E,KAAM,KAAM9E,GACvCA,EAAKkB,OACRlB,EAAKkB,KAAOlB,EAAK8E,MAEnB9E,EAAKrhB,SAGP,SAAS8nB,EAASzG,EAAMwG,GACtBxG,EAAKkB,KAAO,IAAIiG,EAAKX,EAAM,KAAMxG,EAAKkB,KAAMlB,GACvCA,EAAK8E,OACR9E,EAAK8E,KAAO9E,EAAKkB,MAEnBlB,EAAKrhB,SAGP,SAASwoB,EAAM5gB,EAAOwe,EAAM5iB,EAAMihB,GAChC,KAAMlf,gBAAgBijB,GACpB,OAAO,IAAIA,EAAK5gB,EAAOwe,EAAM5iB,EAAMihB,GAGrClf,KAAKkf,KAAOA,EACZlf,KAAKqC,MAAQA,EAETwe,GACFA,EAAK5iB,KAAO+B,KACZA,KAAK6gB,KAAOA,GAEZ7gB,KAAK6gB,KAAO,KAGV5iB,GACFA,EAAK4iB,KAAO7gB,KACZA,KAAK/B,KAAOA,GAEZ+B,KAAK/B,KAAO,KAjahB+D,EAAOC,QAAUsd,EAEjBA,EAAQ0D,KAAOA,EACf1D,EAAQ7V,OAAS6V,EAyBjBA,EAAQrW,UAAU4X,WAAa,SAAUV,GACvC,GAAIA,EAAKlB,OAASlf,KAChB,MAAM,IAAI+B,MAAM,oDAGlB,IAAI9D,EAAOmiB,EAAKniB,KACZ4iB,EAAOT,EAAKS,KAsBhB,OApBI5iB,IACFA,EAAK4iB,KAAOA,GAGVA,IACFA,EAAK5iB,KAAOA,GAGVmiB,IAASpgB,KAAKgd,OAChBhd,KAAKgd,KAAO/e,GAEVmiB,IAASpgB,KAAK4gB,OAChB5gB,KAAK4gB,KAAOC,GAGdT,EAAKlB,KAAKzkB,SACV2lB,EAAKniB,KAAO,KACZmiB,EAAKS,KAAO,KACZT,EAAKlB,KAAO,KAELjhB,GAGTshB,EAAQrW,UAAUuX,YAAc,SAAUL,GACxC,GAAIA,IAASpgB,KAAKgd,KAAlB,CAIIoD,EAAKlB,MACPkB,EAAKlB,KAAK4B,WAAWV,GAGvB,IAAIpD,EAAOhd,KAAKgd,KAChBoD,EAAKlB,KAAOlf,KACZogB,EAAKniB,KAAO+e,EACRA,IACFA,EAAK6D,KAAOT,GAGdpgB,KAAKgd,KAAOoD,EACPpgB,KAAK4gB,OACR5gB,KAAK4gB,KAAOR,GAEdpgB,KAAKvF,WAGP8kB,EAAQrW,UAAUga,SAAW,SAAU9C,GACrC,GAAIA,IAASpgB,KAAK4gB,KAAlB,CAIIR,EAAKlB,MACPkB,EAAKlB,KAAK4B,WAAWV,GAGvB,IAAIQ,EAAO5gB,KAAK4gB,KAChBR,EAAKlB,KAAOlf,KACZogB,EAAKS,KAAOD,EACRA,IACFA,EAAK3iB,KAAOmiB,GAGdpgB,KAAK4gB,KAAOR,EACPpgB,KAAKgd,OACRhd,KAAKgd,KAAOoD,GAEdpgB,KAAKvF,WAGP8kB,EAAQrW,UAAUrH,KAAO,WACvB,IAAK,IAAIhF,EAAI,EAAG8lB,EAAIG,UAAUroB,OAAQoC,EAAI8lB,EAAG9lB,IAC3CgF,EAAK7B,KAAM8iB,UAAUjmB,IAEvB,OAAOmD,KAAKvF,QAGd8kB,EAAQrW,UAAUqZ,QAAU,WAC1B,IAAK,IAAI1lB,EAAI,EAAG8lB,EAAIG,UAAUroB,OAAQoC,EAAI8lB,EAAG9lB,IAC3C0lB,EAAQviB,KAAM8iB,UAAUjmB,IAE1B,OAAOmD,KAAKvF,QAGd8kB,EAAQrW,UAAUzD,IAAM,WACtB,GAAKzF,KAAK4gB,KAAV,CAIA,IAAIrG,EAAMva,KAAK4gB,KAAKve,MAQpB,OAPArC,KAAK4gB,KAAO5gB,KAAK4gB,KAAKC,KAClB7gB,KAAK4gB,KACP5gB,KAAK4gB,KAAK3iB,KAAO,KAEjB+B,KAAKgd,KAAO,KAEdhd,KAAKvF,SACE8f,IAGTgF,EAAQrW,UAAUia,MAAQ,WACxB,GAAKnjB,KAAKgd,KAAV,CAIA,IAAIzC,EAAMva,KAAKgd,KAAK3a,MAQpB,OAPArC,KAAKgd,KAAOhd,KAAKgd,KAAK/e,KAClB+B,KAAKgd,KACPhd,KAAKgd,KAAK6D,KAAO,KAEjB7gB,KAAK4gB,KAAO,KAEd5gB,KAAKvF,SACE8f,IAGTgF,EAAQrW,UAAU2N,QAAU,SAAUoK,EAAIC,GACxCA,EAAQA,GAASlhB,KACjB,IAAK,IAAI2gB,EAAS3gB,KAAKgd,KAAMngB,EAAI,EAAc,OAAX8jB,EAAiB9jB,IACnDokB,EAAGE,KAAKD,EAAOP,EAAOte,MAAOxF,EAAGmD,MAChC2gB,EAASA,EAAO1iB,MAIpBshB,EAAQrW,UAAUka,eAAiB,SAAUnC,EAAIC,GAC/CA,EAAQA,GAASlhB,KACjB,IAAK,IAAI2gB,EAAS3gB,KAAK4gB,KAAM/jB,EAAImD,KAAKvF,OAAS,EAAc,OAAXkmB,EAAiB9jB,IACjEokB,EAAGE,KAAKD,EAAOP,EAAOte,MAAOxF,EAAGmD,MAChC2gB,EAASA,EAAOE,MAIpBtB,EAAQrW,UAAU9F,IAAM,SAAUigB,GAChC,IAAK,IAAIxmB,EAAI,EAAG8jB,EAAS3gB,KAAKgd,KAAiB,OAAX2D,GAAmB9jB,EAAIwmB,EAAGxmB,IAE5D8jB,EAASA,EAAO1iB,KAElB,GAAIpB,IAAMwmB,GAAgB,OAAX1C,EACb,OAAOA,EAAOte,OAIlBkd,EAAQrW,UAAUoa,WAAa,SAAUD,GACvC,IAAK,IAAIxmB,EAAI,EAAG8jB,EAAS3gB,KAAK4gB,KAAiB,OAAXD,GAAmB9jB,EAAIwmB,EAAGxmB,IAE5D8jB,EAASA,EAAOE,KAElB,GAAIhkB,IAAMwmB,GAAgB,OAAX1C,EACb,OAAOA,EAAOte,OAIlBkd,EAAQrW,UAAUtI,IAAM,SAAUqgB,EAAIC,GACpCA,EAAQA,GAASlhB,KAEjB,IADA,IAAIua,EAAM,IAAIgF,EACLoB,EAAS3gB,KAAKgd,KAAiB,OAAX2D,GAC3BpG,EAAI1Y,KAAKof,EAAGE,KAAKD,EAAOP,EAAOte,MAAOrC,OACtC2gB,EAASA,EAAO1iB,KAElB,OAAOsc,GAGTgF,EAAQrW,UAAUqa,WAAa,SAAUtC,EAAIC,GAC3CA,EAAQA,GAASlhB,KAEjB,IADA,IAAIua,EAAM,IAAIgF,EACLoB,EAAS3gB,KAAK4gB,KAAiB,OAAXD,GAC3BpG,EAAI1Y,KAAKof,EAAGE,KAAKD,EAAOP,EAAOte,MAAOrC,OACtC2gB,EAASA,EAAOE,KAElB,OAAOtG,GAGTgF,EAAQrW,UAAUsL,OAAS,SAAUyM,EAAIuC,GACvC,IAAItmB,EACAyjB,EAAS3gB,KAAKgd,KAClB,GAAI8F,UAAUroB,OAAS,EACrByC,EAAMsmB,MACD,KAAIxjB,KAAKgd,KAId,MAAM,IAAIjd,UAAU,8CAHpB4gB,EAAS3gB,KAAKgd,KAAK/e,KACnBf,EAAM8C,KAAKgd,KAAK3a,MAKlB,IAAK,IAAIxF,EAAI,EAAc,OAAX8jB,EAAiB9jB,IAC/BK,EAAM+jB,EAAG/jB,EAAKyjB,EAAOte,MAAOxF,GAC5B8jB,EAASA,EAAO1iB,KAGlB,OAAOf,GAGTqiB,EAAQrW,UAAUua,cAAgB,SAAUxC,EAAIuC,GAC9C,IAAItmB,EACAyjB,EAAS3gB,KAAK4gB,KAClB,GAAIkC,UAAUroB,OAAS,EACrByC,EAAMsmB,MACD,KAAIxjB,KAAK4gB,KAId,MAAM,IAAI7gB,UAAU,8CAHpB4gB,EAAS3gB,KAAK4gB,KAAKC,KACnB3jB,EAAM8C,KAAK4gB,KAAKve,MAKlB,IAAK,IAAIxF,EAAImD,KAAKvF,OAAS,EAAc,OAAXkmB,EAAiB9jB,IAC7CK,EAAM+jB,EAAG/jB,EAAKyjB,EAAOte,MAAOxF,GAC5B8jB,EAASA,EAAOE,KAGlB,OAAO3jB,GAGTqiB,EAAQrW,UAAU+Y,QAAU,WAE1B,IADA,IAAIS,EAAM,IAAIgB,MAAM1jB,KAAKvF,QAChBoC,EAAI,EAAG8jB,EAAS3gB,KAAKgd,KAAiB,OAAX2D,EAAiB9jB,IACnD6lB,EAAI7lB,GAAK8jB,EAAOte,MAChBse,EAASA,EAAO1iB,KAElB,OAAOykB,GAGTnD,EAAQrW,UAAUya,eAAiB,WAEjC,IADA,IAAIjB,EAAM,IAAIgB,MAAM1jB,KAAKvF,QAChBoC,EAAI,EAAG8jB,EAAS3gB,KAAK4gB,KAAiB,OAAXD,EAAiB9jB,IACnD6lB,EAAI7lB,GAAK8jB,EAAOte,MAChBse,EAASA,EAAOE,KAElB,OAAO6B,GAGTnD,EAAQrW,UAAU3D,MAAQ,SAAUhI,EAAMwK,IACxCA,EAAKA,GAAM/H,KAAKvF,QACP,IACPsN,GAAM/H,KAAKvF,SAEb8C,EAAOA,GAAQ,GACJ,IACTA,GAAQyC,KAAKvF,QAEf,IAAI+L,EAAM,IAAI+Y,EACd,GAAIxX,EAAKxK,GAAQwK,EAAK,EACpB,OAAOvB,EAELjJ,EAAO,IACTA,EAAO,GAELwK,EAAK/H,KAAKvF,SACZsN,EAAK/H,KAAKvF,QAEZ,IAAK,IAAIoC,EAAI,EAAG8jB,EAAS3gB,KAAKgd,KAAiB,OAAX2D,GAAmB9jB,EAAIU,EAAMV,IAC/D8jB,EAASA,EAAO1iB,KAElB,KAAkB,OAAX0iB,GAAmB9jB,EAAIkL,EAAIlL,IAAK8jB,EAASA,EAAO1iB,KACrDuI,EAAI3E,KAAK8e,EAAOte,OAElB,OAAOmE,GAGT+Y,EAAQrW,UAAU0a,aAAe,SAAUrmB,EAAMwK,IAC/CA,EAAKA,GAAM/H,KAAKvF,QACP,IACPsN,GAAM/H,KAAKvF,SAEb8C,EAAOA,GAAQ,GACJ,IACTA,GAAQyC,KAAKvF,QAEf,IAAI+L,EAAM,IAAI+Y,EACd,GAAIxX,EAAKxK,GAAQwK,EAAK,EACpB,OAAOvB,EAELjJ,EAAO,IACTA,EAAO,GAELwK,EAAK/H,KAAKvF,SACZsN,EAAK/H,KAAKvF,QAEZ,IAAK,IAAIoC,EAAImD,KAAKvF,OAAQkmB,EAAS3gB,KAAK4gB,KAAiB,OAAXD,GAAmB9jB,EAAIkL,EAAIlL,IACvE8jB,EAASA,EAAOE,KAElB,KAAkB,OAAXF,GAAmB9jB,EAAIU,EAAMV,IAAK8jB,EAASA,EAAOE,KACvDra,EAAI3E,KAAK8e,EAAOte,OAElB,OAAOmE,GAGT+Y,EAAQrW,UAAU2a,OAAS,SAAUC,EAAOC,GACtCD,EAAQ9jB,KAAKvF,SACfqpB,EAAQ9jB,KAAKvF,OAAS,GAEpBqpB,EAAQ,IACVA,EAAQ9jB,KAAKvF,OAASqpB,GAGxB,IAAK,IAAIjnB,EAAI,EAAG8jB,EAAS3gB,KAAKgd,KAAiB,OAAX2D,GAAmB9jB,EAAIinB,EAAOjnB,IAChE8jB,EAASA,EAAO1iB,KAGlB,IAAIuI,EAAM,GACV,IAAS3J,EAAI,EAAG8jB,GAAU9jB,EAAIknB,EAAalnB,IACzC2J,EAAI3E,KAAK8e,EAAOte,OAChBse,EAAS3gB,KAAK8gB,WAAWH,GAEZ,OAAXA,IACFA,EAAS3gB,KAAK4gB,MAGZD,IAAW3gB,KAAKgd,MAAQ2D,IAAW3gB,KAAK4gB,OAC1CD,EAASA,EAAOE,MAGlB,IAAShkB,EAAI,EAAGA,GAAC,0CAAiBA,IAChC8jB,EAASoC,EAAO/iB,KAAM2gB,EAAc9jB,EAArB,uBAAqBA,EAArB,mBAAqBA,EAArB,IAEjB,OAAO2J,GAGT+Y,EAAQrW,UAAU8a,QAAU,WAG1B,IAFA,IAAIhH,EAAOhd,KAAKgd,KACZ4D,EAAO5gB,KAAK4gB,KACPD,EAAS3D,EAAiB,OAAX2D,EAAiBA,EAASA,EAAOE,KAAM,CAC7D,IAAIva,EAAIqa,EAAOE,KACfF,EAAOE,KAAOF,EAAO1iB,KACrB0iB,EAAO1iB,KAAOqI,EAIhB,OAFAtG,KAAKgd,KAAO4D,EACZ5gB,KAAK4gB,KAAO5D,EACLhd,MA2DT,IAEEd,EAAQ,IAARA,CAAyBqgB,GACzB,MAAOpa,M,iCCxaTnD,EAAOC,QAAU,SAAUsd,GACzBA,EAAQrW,UAAUwL,OAAOuP,UAAY,YACnC,IAAK,IAAItD,EAAS3gB,KAAKgd,KAAM2D,EAAQA,EAASA,EAAO1iB,WAC7C0iB,EAAOte,S,oBCJnB,MAAMH,EAAQhD,EAAQ,KAOtB8C,EAAOC,QAJe,CAACE,EAAOvC,IAC5B,IAAIsC,EAAMC,EAAOvC,GAAS0C,IACvB1B,KAAIqD,GAAQA,EAAKrD,KAAI6B,GAAKA,EAAEJ,QAAOnB,KAAK,KAAKhB,OAAOS,MAAM,Q,oBCL/D,MAAMlB,EAASP,EAAQ,KACjBgD,EAAQhD,EAAQ,KAuBtB8C,EAAOC,QArBe,CAACiiB,EAAU/hB,EAAOvC,KACtC,IAAIyF,EAAM,KACN8e,EAAQ,KACRC,EAAW,KACf,IACEA,EAAW,IAAIliB,EAAMC,EAAOvC,GAC5B,MAAOuF,GACP,OAAO,KAYT,OAVA+e,EAASrN,SAAS4H,IACZ2F,EAAStjB,KAAK2d,KAEXpZ,IAA6B,IAAtB8e,EAAMhjB,QAAQsd,KAExBpZ,EAAMoZ,EACN0F,EAAQ,IAAI1kB,EAAO4F,EAAKzF,QAIvByF,I,oBCtBT,MAAM5F,EAASP,EAAQ,KACjBgD,EAAQhD,EAAQ,KAsBtB8C,EAAOC,QArBe,CAACiiB,EAAU/hB,EAAOvC,KACtC,IAAIykB,EAAM,KACNC,EAAQ,KACRF,EAAW,KACf,IACEA,EAAW,IAAIliB,EAAMC,EAAOvC,GAC5B,MAAOuF,GACP,OAAO,KAYT,OAVA+e,EAASrN,SAAS4H,IACZ2F,EAAStjB,KAAK2d,KAEX4F,GAA4B,IAArBC,EAAMnjB,QAAQsd,KAExB4F,EAAM5F,EACN6F,EAAQ,IAAI7kB,EAAO4kB,EAAKzkB,QAIvBykB,I,oBCrBT,MAAM5kB,EAASP,EAAQ,KACjBgD,EAAQhD,EAAQ,KAChBgX,EAAKhX,EAAQ,KA0DnB8C,EAAOC,QAxDY,CAACE,EAAOtC,KACzBsC,EAAQ,IAAID,EAAMC,EAAOtC,GAEzB,IAAI0kB,EAAS,IAAI9kB,EAAO,SACxB,GAAI0C,EAAMrB,KAAKyjB,GACb,OAAOA,EAIT,GADAA,EAAS,IAAI9kB,EAAO,WAChB0C,EAAMrB,KAAKyjB,GACb,OAAOA,EAGTA,EAAS,KACT,IAAK,IAAI1nB,EAAI,EAAGA,EAAIsF,EAAMG,IAAI7H,SAAUoC,EAAG,CACzC,MAAM0H,EAAcpC,EAAMG,IAAIzF,GAE9B,IAAI2nB,EAAS,KACbjgB,EAAYsS,SAASC,IAEnB,MAAM2N,EAAU,IAAIhlB,EAAOqX,EAAWzO,OAAO1I,SAC7C,OAAQmX,EAAWnC,UACjB,IAAK,IAC+B,IAA9B8P,EAAQ/jB,WAAWjG,OACrBgqB,EAAQhkB,QAERgkB,EAAQ/jB,WAAWmB,KAAK,GAE1B4iB,EAAQnkB,IAAMmkB,EAAQxjB,SAExB,IAAK,GACL,IAAK,KACEujB,IAAUtO,EAAGuO,EAASD,KACzBA,EAASC,GAEX,MACF,IAAK,IACL,IAAK,KAEH,MAEF,QACE,MAAM,IAAI1iB,MAAJ,gCAAmC+U,EAAWnC,gBAGtD6P,GAAYD,IAAUrO,EAAGqO,EAAQC,KACnCD,EAASC,GAIb,OAAID,GAAUpiB,EAAMrB,KAAKyjB,GAChBA,EAGF,O,oBC1DT,MAAMriB,EAAQhD,EAAQ,KAUtB8C,EAAOC,QATY,CAACE,EAAOvC,KACzB,IAGE,OAAO,IAAIsC,EAAMC,EAAOvC,GAASuC,OAAS,IAC1C,MAAOgD,GACP,OAAO,Q,oBCNX,MAAMiZ,EAAUlf,EAAQ,KAExB8C,EAAOC,QADK,CAACtC,EAASwC,EAAOvC,IAAYwe,EAAQze,EAASwC,EAAO,IAAKvC,I,oBCFtE,MAAMwe,EAAUlf,EAAQ,KAGxB8C,EAAOC,QADK,CAACtC,EAASwC,EAAOvC,IAAYwe,EAAQze,EAASwC,EAAO,IAAKvC,I,oBCFtE,MAAMsC,EAAQhD,EAAQ,KAMtB8C,EAAOC,QALY,CAACyiB,EAAIC,EAAI/kB,KAC1B8kB,EAAK,IAAIxiB,EAAMwiB,EAAI9kB,GACnB+kB,EAAK,IAAIziB,EAAMyiB,EAAI/kB,GACZ8kB,EAAG9f,WAAW+f,K,oBCDvB,MAAM1O,EAAY/W,EAAQ,KACpBiC,EAAUjC,EAAQ,KACxB8C,EAAOC,QAAU,CAACiiB,EAAU/hB,EAAOvC,KACjC,MAAM0C,EAAM,GACZ,IAAII,EAAQ,KACRme,EAAO,KACX,MAAMpC,EAAIyF,EAASrG,MAAK,CAAC3iB,EAAGqG,IAAMJ,EAAQjG,EAAGqG,EAAG3B,KAChD,IAAK,MAAMD,KAAW8e,EAAG,CACNxI,EAAUtW,EAASwC,EAAOvC,IAEzCihB,EAAOlhB,EACF+C,IACHA,EAAQ/C,KAGNkhB,GACFve,EAAIT,KAAK,CAACa,EAAOme,IAEnBA,EAAO,KACPne,EAAQ,MAGRA,GACFJ,EAAIT,KAAK,CAACa,EAAO,OAGnB,MAAMkiB,EAAS,GACf,IAAK,MAAOP,EAAKhf,KAAQ/C,EACnB+hB,IAAQhf,EACVuf,EAAO/iB,KAAKwiB,GACFhf,GAAOgf,IAAQ5F,EAAE,GAEjBpZ,EAEDgf,IAAQ5F,EAAE,GACnBmG,EAAO/iB,KAAP,YAAiBwD,IAEjBuf,EAAO/iB,KAAP,UAAewiB,EAAf,cAAwBhf,IAJxBuf,EAAO/iB,KAAP,YAAiBwiB,IAFjBO,EAAO/iB,KAAK,KAShB,MAAMgjB,EAAaD,EAAO1jB,KAAK,QACzB4jB,EAAgC,kBAAd3iB,EAAM7B,IAAmB6B,EAAM7B,IAAMwJ,OAAO3H,GACpE,OAAO0iB,EAAWpqB,OAASqqB,EAASrqB,OAASoqB,EAAa1iB,I,oBC7C5D,MAAMD,EAAQhD,EAAQ,KAChBkD,EAAalD,EAAQ,MACrB,IAAEoJ,GAAQlG,EACV6T,EAAY/W,EAAQ,KACpBiC,EAAUjC,EAAQ,KAkElB6lB,EAAe,CAACtJ,EAAKuJ,EAAKplB,KAC9B,GAAI6b,IAAQuJ,EACV,OAAO,EAGT,GAAmB,IAAfvJ,EAAIhhB,QAAgBghB,EAAI,GAAGpT,SAAWC,EAAK,CAC7C,GAAmB,IAAf0c,EAAIvqB,QAAgBuqB,EAAI,GAAG3c,SAAWC,EACxC,OAAO,EAEPmT,EADS7b,EAAQE,kBACX,CAAC,IAAIsC,EAAW,cAEhB,CAAC,IAAIA,EAAW,YAI1B,GAAmB,IAAf4iB,EAAIvqB,QAAgBuqB,EAAI,GAAG3c,SAAWC,EAAK,CAC7C,GAAI1I,EAAQE,kBACV,OAAO,EAEPklB,EAAM,CAAC,IAAI5iB,EAAW,YAI1B,MAAM6iB,EAAQ,IAAIC,IAClB,IAAIhP,EAAIC,EAeJgP,EA6BAC,EAAQC,EACRC,EAAUC,EA5Cd,IAAK,MAAM9iB,KAAKgZ,EACK,MAAfhZ,EAAEkS,UAAmC,OAAflS,EAAEkS,SAC1BuB,EAAKsP,EAAStP,EAAIzT,EAAG7C,GACG,MAAf6C,EAAEkS,UAAmC,OAAflS,EAAEkS,SACjCwB,EAAKsP,EAAQtP,EAAI1T,EAAG7C,GAEpBqlB,EAAMS,IAAIjjB,EAAE4F,QAIhB,GAAI4c,EAAMzgB,KAAO,EACf,OAAO,KAIT,GAAI0R,GAAMC,EAAI,CAEZ,GADAgP,EAAWhkB,EAAQ+U,EAAG7N,OAAQ8N,EAAG9N,OAAQzI,GACrCulB,EAAW,EACb,OAAO,KACF,GAAiB,IAAbA,IAAmC,OAAhBjP,EAAGvB,UAAqC,OAAhBwB,EAAGxB,UACvD,OAAO,KAKX,IAAK,MAAMoE,KAAMkM,EAAO,CACtB,GAAI/O,IAAOD,EAAU8C,EAAIjP,OAAOoM,GAAKtW,GACnC,OAAO,KAGT,GAAIuW,IAAOF,EAAU8C,EAAIjP,OAAOqM,GAAKvW,GACnC,OAAO,KAGT,IAAK,MAAM6C,KAAKuiB,EACd,IAAK/O,EAAU8C,EAAIjP,OAAOrH,GAAI7C,GAC5B,OAAO,EAIX,OAAO,EAOT,IAAI+lB,KAAexP,GAChBvW,EAAQE,oBACTqW,EAAG9N,OAAO3H,WAAWjG,SAAS0b,EAAG9N,OAC/Bud,KAAe1P,GAChBtW,EAAQE,oBACToW,EAAG7N,OAAO3H,WAAWjG,SAASyb,EAAG7N,OAE/Bsd,GAAmD,IAAnCA,EAAajlB,WAAWjG,QACxB,MAAhB0b,EAAGxB,UAAmD,IAA/BgR,EAAajlB,WAAW,KACjDilB,GAAe,GAGjB,IAAK,MAAMljB,KAAKuiB,EAAK,CAGnB,GAFAO,EAAWA,GAA2B,MAAf9iB,EAAEkS,UAAmC,OAAflS,EAAEkS,SAC/C2Q,EAAWA,GAA2B,MAAf7iB,EAAEkS,UAAmC,OAAflS,EAAEkS,SAC3CuB,EASF,GARI0P,GACEnjB,EAAE4F,OAAO3H,YAAc+B,EAAE4F,OAAO3H,WAAWjG,QAC3CgI,EAAE4F,OAAO9H,QAAUqlB,EAAarlB,OAChCkC,EAAE4F,OAAO7H,QAAUolB,EAAaplB,OAChCiC,EAAE4F,OAAO5H,QAAUmlB,EAAanlB,QAClCmlB,GAAe,GAGA,MAAfnjB,EAAEkS,UAAmC,OAAflS,EAAEkS,UAE1B,GADAyQ,EAASI,EAAStP,EAAIzT,EAAG7C,GACrBwlB,IAAW3iB,GAAK2iB,IAAWlP,EAC7B,OAAO,OAEJ,GAAoB,OAAhBA,EAAGvB,WAAsBsB,EAAUC,EAAG7N,OAAQyB,OAAOrH,GAAI7C,GAClE,OAAO,EAGX,GAAIuW,EASF,GARIwP,GACEljB,EAAE4F,OAAO3H,YAAc+B,EAAE4F,OAAO3H,WAAWjG,QAC3CgI,EAAE4F,OAAO9H,QAAUolB,EAAaplB,OAChCkC,EAAE4F,OAAO7H,QAAUmlB,EAAanlB,OAChCiC,EAAE4F,OAAO5H,QAAUklB,EAAallB,QAClCklB,GAAe,GAGA,MAAfljB,EAAEkS,UAAmC,OAAflS,EAAEkS,UAE1B,GADA0Q,EAAQI,EAAQtP,EAAI1T,EAAG7C,GACnBylB,IAAU5iB,GAAK4iB,IAAUlP,EAC3B,OAAO,OAEJ,GAAoB,OAAhBA,EAAGxB,WAAsBsB,EAAUE,EAAG9N,OAAQyB,OAAOrH,GAAI7C,GAClE,OAAO,EAGX,IAAK6C,EAAEkS,WAAawB,GAAMD,IAAoB,IAAbiP,EAC/B,OAAO,EAOX,QAAIjP,GAAMoP,IAAanP,GAAmB,IAAbgP,OAIzBhP,GAAMoP,IAAarP,GAAmB,IAAbiP,MAOzBS,IAAgBD,KAQhBH,EAAW,CAACtqB,EAAGqG,EAAG3B,KACtB,IAAK1E,EACH,OAAOqG,EAET,MAAM0C,EAAO9C,EAAQjG,EAAEmN,OAAQ9G,EAAE8G,OAAQzI,GACzC,OAAOqE,EAAO,EAAI/I,EACd+I,EAAO,GACQ,MAAf1C,EAAEoT,UAAmC,OAAfzZ,EAAEyZ,SADbpT,EAEXrG,GAIAuqB,EAAU,CAACvqB,EAAGqG,EAAG3B,KACrB,IAAK1E,EACH,OAAOqG,EAET,MAAM0C,EAAO9C,EAAQjG,EAAEmN,OAAQ9G,EAAE8G,OAAQzI,GACzC,OAAOqE,EAAO,EAAI/I,EACd+I,EAAO,GACQ,MAAf1C,EAAEoT,UAAmC,OAAfzZ,EAAEyZ,SADbpT,EAEXrG,GAGN8G,EAAOC,QAzMQ,SAACwZ,EAAKuJ,GAAsB,IAAjBplB,EAAiB,uDAAP,GAClC,GAAI6b,IAAQuJ,EACV,OAAO,EAGTvJ,EAAM,IAAIvZ,EAAMuZ,EAAK7b,GACrBolB,EAAM,IAAI9iB,EAAM8iB,EAAKplB,GACrB,IAAIimB,GAAa,EAEjBC,EAAO,IAAK,MAAMC,KAAatK,EAAInZ,IAAK,CACtC,IAAK,MAAM0jB,KAAahB,EAAI1iB,IAAK,CAC/B,MAAM2jB,EAAQlB,EAAagB,EAAWC,EAAWpmB,GAEjD,GADAimB,EAAaA,GAAwB,OAAVI,EACvBA,EACF,SAASH,EAOb,GAAID,EACF,OAAO,EAGX,OAAO,I,ogDCjEHK,EAAgB,CACpB,CACEC,SAAU7N,MAIR,SAAgBle,I,0FACL,SAAMuB,UAAUC,IAAIwqB,cAAc,CAC/CC,QAASH,K,OAEX,SAHe7rB,iBAMX,SAAgBE,I,0FACJ,SAAMoB,UAAUC,IAAI0qB,c,OACpC,SADgBjsB,SACDmI,QAAO,SAACiW,GAAM,SAAE0N,WAAa7N,eAGxC,SAAgBva,I,gGACI,SAAMxD,K,OAC9B,OADMgsB,EAAkBlsB,UACJI,OAAS,EAAG,GAAO8rB,EAAgB,IACvD,GAAOnsB,YAGF,IAAMwD,EAAc,WACzB,eAAQ+c,UACJhf,aACEA,UAAUC,KACwB,oBAA7BD,UAAUC,IAAI0qB","file":"static/js/7.84fba203.chunk.js","sourcesContent":[null,"const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n",null,null,"const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n",null,null,"// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n",null],"sourceRoot":""}